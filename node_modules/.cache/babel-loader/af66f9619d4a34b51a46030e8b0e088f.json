{"ast":null,"code":"var _jsxFileName = \"/Users/daniele/Documents/GitHub/paroliere/src/components/ui.js\";\nimport React, { Component, Fragment, useState, useContext, useGlobal } from 'react';\nimport Board from './board';\nimport Timer from './timer';\nimport PrimarySearchAppBar from './myAppBar';\nimport { Button, Card, Typography, Box, InputBase } from '@material-ui/core';\nimport GlobalState from \"../store/store\";\nconsole.log(GlobalState);\nimport dice from \"./dice\";\nimport { Global } from '@emotion/core';\n\nconst Ui = () => {\n  const [globalState, globalDispatch] = useContext(GlobalState);\n  const timer = globalState.timer;\n  const match = globalState.match;\n  const rolls = globalState.rolls;\n  console.log('children rolls ', rolls);\n\n  const makeRollsDice = () => {\n    console.log('makeRollsDice'); //console.log('appState', appState)\n\n    let rowsNum = 5;\n    let colsNum = 5;\n\n    if (typeof globalState !== 'undefined') {\n      rowsNum = globalState.rowsNum;\n      colsNum = globalState.colsNum;\n    }\n\n    console.log('state rows and cols', rowsNum, colsNum);\n    console.log('state type ', typeof appState); //console.log('state ', appState)\n\n    console.log(rowsNum, colsNum);\n    let rolls = []; //clone whole diceStack\n\n    let diceStack = [...dice];\n\n    while (diceStack.length > dice.length - rowsNum * colsNum) {\n      let dieNumber = Math.floor(Math.random() * diceStack.length);\n      let dieFace = Math.floor(Math.random() * 6);\n      rolls.push(diceStack[dieNumber][dieFace]);\n      diceStack.splice(dieNumber, 1);\n      console.log('diceStack ', diceStack.length);\n      console.log('soglia ', dice.length - rowsNum * colsNum);\n    }\n\n    console.log('dice number', rolls.length);\n    console.log('rolls', rolls);\n    return rolls;\n  };\n\n  const handleEvent = (event, rollsDice) => {\n    switch (event.type) {\n      case 'click':\n        console.log('clicked ', event.target);\n        globalDispatch({\n          type: \"INC_MATCH\"\n        });\n        console.log('appState setted');\n        break;\n\n      default:\n        console.log('unhandled ', event.type);\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PrimarySearchAppBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    width: \"350px\",\n    padding: \"10px 5px\",\n    border: \"5px\",\n    display: \"block\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    padding: \"0px 5px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, \"Match \", globalState.match), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    key: 'rollDicesBtn',\n    onClick: (e, key) => handleEvent(e, key),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, \"Roll dice\")), console.log(globalState.rolls)(globalState.rolls.length > 0 && typeof globalState.rolls !== 'undefined') ? /*#__PURE__*/React.createElement(Board, {\n    rolls: globalState.rolls,\n    rowsNum: globalState.rowsNum,\n    colsNum: globalState.colsNum,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Timer, {\n    totalTime: globalState.totalTime,\n    countDown: globalState.countDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Ui;","map":{"version":3,"sources":["/Users/daniele/Documents/GitHub/paroliere/src/components/ui.js"],"names":["React","Component","Fragment","useState","useContext","useGlobal","Board","Timer","PrimarySearchAppBar","Button","Card","Typography","Box","InputBase","GlobalState","console","log","dice","Global","Ui","globalState","globalDispatch","timer","match","rolls","makeRollsDice","rowsNum","colsNum","appState","diceStack","length","dieNumber","Math","floor","random","dieFace","push","splice","handleEvent","event","rollsDice","type","target","e","key","totalTime","countDown"],"mappings":"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","sourcesContent":["import React, { Component, Fragment, useState, useContext, useGlobal} from 'react';\nimport Board from './board'\nimport Timer from './timer'\nimport PrimarySearchAppBar from './myAppBar'\nimport { Button, Card, Typography, Box, InputBase } from '@material-ui/core'\nimport GlobalState from \"../store/store\"\nconsole.log(GlobalState)\nimport dice from \"./dice\"\nimport { Global } from '@emotion/core';\n\nconst Ui = (() => {\n\n    const [globalState, globalDispatch] = useContext(GlobalState);\n\n    const timer = globalState.timer;\n    const match = globalState.match;\n    const rolls = globalState.rolls;\n\n    console.log('children rolls ', rolls);\n\n    const makeRollsDice = () => {\n        console.log('makeRollsDice')\n        //console.log('appState', appState)\n        let rowsNum = 5\n        let colsNum = 5\n        if (typeof(globalState)!== 'undefined'){\n           rowsNum = globalState.rowsNum\n           colsNum = globalState.colsNum\n        }\n         \n        console.log('state rows and cols', rowsNum, colsNum)\n        console.log('state type ', typeof (appState))\n        //console.log('state ', appState)\n        console.log(rowsNum, colsNum)\n        let rolls = []\n        //clone whole diceStack\n        let diceStack = [...dice]\n        while (diceStack.length > dice.length - (rowsNum * colsNum)) {\n          let dieNumber = Math.floor(Math.random() * diceStack.length);\n          let dieFace = Math.floor(Math.random() * 6);\n          rolls.push(diceStack[dieNumber][dieFace])\n          diceStack.splice(dieNumber, 1)\n          console.log('diceStack ', diceStack.length)\n          console.log('soglia ', dice.length - (rowsNum * colsNum))\n        }\n        console.log('dice number', rolls.length)\n        console.log('rolls', rolls)\n        return rolls\n      }\n    \n    \n      const handleEvent = (event, rollsDice) => {\n        switch (event.type) {\n          case 'click':\n            console.log('clicked ', event.target);\n              globalDispatch({type:\"INC_MATCH\"})\n              console.log('appState setted')\n            break\n          default:\n            console.log('unhandled ', event.type)\n      };\n    }\n     \n    return (\n\n        <Fragment>\n            <PrimarySearchAppBar/>   \n            <Box\n                width='350px'\n                padding=\"10px 5px\"\n                border='5px'\n                display=\"block\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n               \n            >\n                <Box \n                    padding=\"0px 5px\"\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    justifyContent=\"space-between\"\n                >\n                    <Typography\n                        variant='h4'>\n                        Match {globalState.match}\n                    </Typography>\n\n                    <Button\n                        variant='contained' color=\"secondary\" key={'rollDicesBtn'}\n                        onClick={(e, key) => handleEvent(e, key)}>\n                        Roll dice\n                    </Button>\n                </Box>\n            \n                {console.log(globalState.rolls) (globalState.rolls.length > 0 && typeof (globalState.rolls) !== 'undefined') ?\n                <Board\n                    rolls={globalState.rolls}\n                    rowsNum={globalState.rowsNum}\n                    colsNum={globalState.colsNum}\n                />\n                : <div></div>}\n                \n                <Timer totalTime={globalState.totalTime} countDown={globalState.countDown}/>\n            </Box>\n        </Fragment>\n    )})\n\nexport default Ui"]},"metadata":{},"sourceType":"module"}