{"ast":null,"code":"var _jsxFileName = \"/Users/daniele/Documents/GitHub/paroliere/src/components/timer.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Button, Typography, Box } from '@material-ui/core';\nimport useSound from 'use-sound';\nimport gongMp3 from '../sounds/chinese-gong.mp3';\nimport dingMp3 from '../sounds/ding.mp3';\n\nconst Timer = ({\n  totalTime,\n  countDown\n}) => {\n  const [seconds, setSeconds] = useState(totalTime);\n  const [isActive, setIsActive] = useState(false);\n\n  function toggle() {\n    setIsActive(!isActive);\n  }\n\n  function reset() {\n    setSeconds(totalTime);\n    setIsActive(false);\n  }\n\n  const [gong] = useSound(gongMp3);\n  const [ding] = useSound(dingMp3);\n  useEffect(() => {\n    let interval = null;\n\n    if (isActive && seconds > 0) {\n      interval = setInterval(() => {\n        setSeconds(seconds => seconds - 1);\n      }, 1000);\n    } else if (seconds === 0) {\n      gong();\n    }\n\n    return () => clearInterval(interval);\n  }, [isActive, seconds]);\n  /*useEffect(() => {\n        let interval = null;\n        if (isActive) {\n            interval = setInterval(() => {\n                setSeconds(seconds => seconds - 1);\n                \n            }, 1000);\n        } else if(!isActive && seconds !== 0) {\n            clearInterval(interval);\n        }\n        if(seconds === 0) {gong()}\n        return () => clearInterval(interval);\n  }, [isActive, seconds]);*/\n\n  return /*#__PURE__*/React.createElement(Box, {\n    padding: \"0px 5px\",\n    display: \"flexbox\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, totalTime, \" - \", countDown), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    className: `${isActive ? 'active' : 'inactive'}`,\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, isActive ? 'Pause' : 'Play'), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Reset\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, seconds, \"s\"));\n};\n\nexport default Timer;","map":{"version":3,"sources":["/Users/daniele/Documents/GitHub/paroliere/src/components/timer.js"],"names":["React","useState","useEffect","Button","Typography","Box","useSound","gongMp3","dingMp3","Timer","totalTime","countDown","seconds","setSeconds","isActive","setIsActive","toggle","reset","gong","ding","interval","setInterval","clearInterval"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,MAAR,EAAgBC,UAAhB,EAA4BC,GAA5B,QAAsC,mBAAtC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,OAAP,MAAqB,4BAArB;AACA,OAAOC,OAAP,MAAqB,oBAArB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA;AAAZ,CAAD,KAA4B;AAExC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAACS,SAAD,CAAtC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,KAAD,CAAxC;;AAEA,WAASe,MAAT,GAAkB;AAChBD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD;;AAED,WAASG,KAAT,GAAiB;AACfJ,IAAAA,UAAU,CAACH,SAAD,CAAV;AACAK,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD;;AAED,QAAM,CAACG,IAAD,IAASZ,QAAQ,CAACC,OAAD,CAAvB;AACA,QAAM,CAACY,IAAD,IAASb,QAAQ,CAACE,OAAD,CAAvB;AAGFN,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIkB,QAAQ,GAAG,IAAf;;AACA,QAAIN,QAAQ,IAAIF,OAAO,GAAE,CAAzB,EAA4B;AACpBQ,MAAAA,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACzBR,QAAAA,UAAU,CAACD,OAAO,IAAIA,OAAO,GAAG,CAAtB,CAAV;AACH,OAFqB,EAEnB,IAFmB,CAAtB;AAGP,KAJD,MAKK,IAAIA,OAAO,KAAK,CAAhB,EAAkB;AACnBM,MAAAA,IAAI;AACP;;AACD,WAAO,MAAMI,aAAa,CAACF,QAAD,CAA1B;AACD,GAXM,EAWJ,CAACN,QAAD,EAAWF,OAAX,CAXI,CAAT;AAaE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,sBACE,oBAAC,GAAD;AACI,IAAA,OAAO,EAAC,SADZ;AAEI,IAAA,OAAO,EAAC,SAFZ;AAGI,IAAA,UAAU,EAAC,QAHf;AAII,IAAA,cAAc,EAAC,eAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMF,SAAN,SAAoBC,SAApB,CARF,eASI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,WAAlC;AAA8C,IAAA,SAAS,EAAG,GAAEG,QAAQ,GAAG,QAAH,GAAc,UAAW,EAA7F;AAAgG,IAAA,OAAO,EAAEE,MAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QAAQ,GAAG,OAAH,GAAa,MADxB,CATJ,eAYI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,WAAlC;AAA+C,IAAA,OAAO,EAAEG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAZJ,eAeI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCL,OADD,MAfJ,CADF;AAqBD,CAlED;;AAoEA,eAAeH,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {Button, Typography, Box} from '@material-ui/core'\nimport useSound from 'use-sound';\nimport gongMp3 from  '../sounds/chinese-gong.mp3'\nimport dingMp3 from  '../sounds/ding.mp3'\n\nconst Timer = ({totalTime, countDown}) => {\n\n  const [seconds, setSeconds] = useState(totalTime);\n  const [isActive, setIsActive] = useState(false);\n\n  function toggle() {\n    setIsActive(!isActive);\n  }\n\n  function reset() {\n    setSeconds(totalTime);\n    setIsActive(false);\n  }\n\n  const [gong] = useSound(gongMp3);\n  const [ding] = useSound(dingMp3);\n\n\nuseEffect(() => {\n    let interval = null;\n    if (isActive && seconds >0) {\n            interval = setInterval(() => {\n                setSeconds(seconds => seconds - 1)\n            }, 1000);   \n    }\n    else if (seconds === 0){\n        gong()\n    }\n    return () => clearInterval(interval)\n  }, [isActive, seconds])\n\n  /*useEffect(() => {\n        let interval = null;\n        if (isActive) {\n            interval = setInterval(() => {\n                setSeconds(seconds => seconds - 1);\n                \n            }, 1000);\n        } else if(!isActive && seconds !== 0) {\n            clearInterval(interval);\n        }\n        if(seconds === 0) {gong()}\n        return () => clearInterval(interval);\n  }, [isActive, seconds]);*/\n\n  return (\n    <Box \n        padding=\"0px 5px\"\n        display=\"flexbox\" \n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n      >     \n\n\n      <div>{totalTime} - {countDown}</div>\n        <Button variant='contained' color=\"secondary\" className={`${isActive ? 'active' : 'inactive'}`} onClick={toggle}>\n          {isActive ? 'Pause' : 'Play'}\n        </Button>\n        <Button variant='contained' color=\"secondary\"  onClick={reset}>\n          Reset\n        </Button>\n        <Typography variant='h4'>\n        {seconds}s\n        </Typography>\n    </Box>\n  );\n};\n\nexport default Timer;\n"]},"metadata":{},"sourceType":"module"}