{"ast":null,"code":"var _jsxFileName = \"/Users/daniele/Documents/GitHub/paroliere/src/components/login.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: 20\n  },\n  appBar: {\n    position: 'relative'\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  }\n}));\nexport default function LoginForm(props) {\n  //const [open, setOpen] = React.useState(props.open);\n  const [loginFormVisibility, setLoginFormVisibility] = React.useState(null);\n  const [username, setUsername] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const theme = useTheme();\n  const classes = useStyles();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  function onSubmit(e) {\n    e.preventDefault();\n    console.log(username, password);\n  }\n  /*\n  const handleClose = () => {\n    setLoginFormVisibility(false);\n    setOpen(false)\n  };\n  */\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    fullScreen: fullScreen,\n    open: props.open,\n    onClose: props.onClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"Subscribe\"), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"username\",\n    label: \"Email Address\",\n    type: \"email\",\n    onChange: event => {\n      setUsername(event.target.value);\n    } //whenever the text field change, you save the value in state\n    ,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    margin: \"dense\",\n    id: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    onChange: event => {\n      setPassword(event.target.value);\n    } //whenever the text field change, you save the value in state\n    ,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: props.onClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    onClick: onSubmit,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Subscribe\"))));\n}","map":{"version":3,"sources":["/Users/daniele/Documents/GitHub/paroliere/src/components/login.js"],"names":["React","makeStyles","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useMediaQuery","useTheme","useStyles","theme","root","padding","appBar","position","title","marginLeft","spacing","flex","LoginForm","props","loginFormVisibility","setLoginFormVisibility","useState","username","setUsername","password","setPassword","classes","fullScreen","breakpoints","down","onSubmit","e","preventDefault","console","log","open","onClose","event","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: 20\n  },\n\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}));\n\n\nexport default function LoginForm(props) {\n  //const [open, setOpen] = React.useState(props.open);\n  const [loginFormVisibility, setLoginFormVisibility] = React.useState(null)\n  const [username, setUsername] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const theme = useTheme();\n  const classes = useStyles();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  \n  function onSubmit(e) {\n    e.preventDefault();\n    console.log(username, password)\n  }\n\n  /*\n  const handleClose = () => {\n    setLoginFormVisibility(false);\n    setOpen(false)\n  };\n  */\n\n  return (\n    <div>\n      <Dialog \n              fullScreen={fullScreen}\n              open={props.open} \n              onClose={props.onClose} \n              aria-labelledby=\"form-dialog-title\">\n\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"username\"\n            label=\"Email Address\"\n            type=\"email\"\n            onChange={(event) => {setUsername(event.target.value)}} //whenever the text field change, you save the value in state\n            fullWidth\n          />\n          <DialogContentText>\n\n          </DialogContentText>\n          <TextField\n            margin=\"dense\"\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            onChange={(event) => {setPassword(event.target.value)}} //whenever the text field change, you save the value in state\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.onClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button type=\"submit\" onClick={onSubmit} color=\"primary\">\n            Subscribe\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}