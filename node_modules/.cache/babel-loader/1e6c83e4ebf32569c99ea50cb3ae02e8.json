{"ast":null,"code":"var _jsxFileName = \"/Users/daniele/Documents/GitHub/paroliere/src/components/board.js\";\nimport React, { Fragment } from 'react';\nimport Headers from './headers';\nimport Row from './row';\nconsole.log('Board');\n\nfunction Board({\n  rolls,\n  colsNum\n}) {\n  console.log(`printing board with ${rolls.length} rolls in ${colsNum} columns`);\n  console.log('rolls length', rolls.length);\n  console.log('columns', colsNum);\n  let rows = [];\n  let rowRolls = [];\n  let rowCounter = 1;\n  let y = 0;\n\n  for (let [index, roll] of rolls.entries()) {\n    console.log(rowCounter, index, rolls[roll]);\n    rowRolls.push({\n      i: roll + 1,\n      x: rowCounter,\n      y: (roll + 1) / colsNum * rowCounter,\n      content: rolls[roll]\n    });\n\n    if (rowRolls.length === colsNum) {\n      console.log(`pushing rowRolls row_${rowCounter} into the board `, rowRolls);\n      rows.push( /*#__PURE__*/React.createElement(\"tr\", {\n        key: rowCounter.toString(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        key: rowCounter.toString(),\n        id: rowCounter,\n        rowRolls: rowRolls,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 59\n        }\n      })));\n      rowRolls = [];\n      rowCounter++;\n      return rows;\n    }\n  }\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/daniele/Documents/GitHub/paroliere/src/components/board.js"],"names":["React","Fragment","Headers","Row","console","log","Board","rolls","colsNum","length","rows","rowRolls","rowCounter","y","index","roll","entries","push","i","x","content","toString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACAC,OAAO,CAACC,GAAR,CAAY,OAAZ;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAf,EAAmC;AAE/BJ,EAAAA,OAAO,CAACC,GAAR,CAAa,uBAAsBE,KAAK,CAACE,MAAO,aAAYD,OAAQ,UAApE;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BE,KAAK,CAACE,MAAlC;AACAL,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBG,OAAtB;AACA,MAAIE,IAAI,GAAG,EAAX;AACA,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,UAAU,GAAG,CAAjB;AACA,MAAIC,CAAC,GAAC,CAAN;;AACA,OAAK,IAAI,CAACC,KAAD,EAAOC,IAAP,CAAT,IAAyBR,KAAK,CAACS,OAAN,EAAzB,EAA0C;AACtCZ,IAAAA,OAAO,CAACC,GAAR,CAAYO,UAAZ,EAAwBE,KAAxB,EAA+BP,KAAK,CAACQ,IAAD,CAApC;AACIJ,IAAAA,QAAQ,CAACM,IAAT,CAAc;AACVC,MAAAA,CAAC,EAACH,IAAI,GAAC,CADG;AAEVI,MAAAA,CAAC,EAACP,UAFQ;AAGVC,MAAAA,CAAC,EAAC,CAACE,IAAI,GAAC,CAAN,IAASP,OAAT,GAAiBI,UAHT;AAIVQ,MAAAA,OAAO,EAAEb,KAAK,CAACQ,IAAD;AAJJ,KAAd;;AAOC,QAAGJ,QAAQ,CAACF,MAAT,KAAoBD,OAAvB,EACD;AACIJ,MAAAA,OAAO,CAACC,GAAR,CAAa,wBAAuBO,UAAW,kBAA/C,EAAiED,QAAjE;AACAD,MAAAA,IAAI,CAACO,IAAL,eAAU;AAAI,QAAA,GAAG,EAAEL,UAAU,CAACS,QAAX,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgC,oBAAC,GAAD;AAAK,QAAA,GAAG,EAAET,UAAU,CAACS,QAAX,EAAV;AAAiC,QAAA,EAAE,EAAET,UAArC;AAAiD,QAAA,QAAQ,EAAED,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhC,CAAV;AACAA,MAAAA,QAAQ,GAAG,EAAX;AACAC,MAAAA,UAAU;AACV,aAAQF,IAAR;AACH;AAEJ;AACR;;AACD,eAAeJ,KAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport Headers from './headers'\nimport Row from './row'\nconsole.log('Board')\n\nfunction Board({ rolls, colsNum }) {\n\n    console.log(`printing board with ${rolls.length} rolls in ${colsNum} columns`)\n    console.log('rolls length', rolls.length)\n    console.log('columns',colsNum)\n    let rows = []\n    let rowRolls = []\n    let rowCounter = 1\n    let y=0\n    for (let [index,roll] of rolls.entries()) {\n        console.log(rowCounter, index, rolls[roll], )\n            rowRolls.push({\n                i:roll+1,\n                x:rowCounter,\n                y:(roll+1)/colsNum*rowCounter,\n                content: rolls[roll]\n            })\n\n             if(rowRolls.length === colsNum) \n            {   \n                console.log(`pushing rowRolls row_${rowCounter} into the board `,rowRolls)\n                rows.push(<tr key={rowCounter.toString()}><Row key={rowCounter.toString()} id={rowCounter} rowRolls={rowRolls}/></tr>)\n                rowRolls = []\n                rowCounter++\n                return (rows)\n            } \n            \n        }\n}\nexport default Board"]},"metadata":{},"sourceType":"module"}