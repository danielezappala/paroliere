{"ast":null,"code":"var _jsxFileName = \"/Users/daniele/Documents/GitHub/paroliere/src/App.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport './App.css';\nimport Board from './components/board';\nimport dice from './data';\nimport PrimarySearchAppBar from './components/myAppBar';\nimport { Paper, Button, ThemeProvider, Typography, InputBase } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport theme from './theme';\nimport Ui from './components/ui';\nimport Store from \"./store/store\";\nimport { Context } from \"./store/store\"; //import <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n\nconst initialState = {\n  dice: dice,\n  rowsNum: 5,\n  colsNum: 5,\n  rolls: [],\n  match: 0,\n  totalTime: 10,\n  countDown: 2\n};\n\nconst App = initialState => {\n  const [appState, setAppState] = React.useState(initialState);\n  useEffect(() => {\n    setAppState(() => ({\n      dice: dice,\n      rowsNum: 5,\n      colsNum: 5,\n      rolls: rollsDice(),\n      match: 0,\n      totalTime: 10,\n      countDown: 2\n    }));\n    console.log('appState', appState);\n  });\n\n  const handleEvent = event => {\n    switch (event.type) {\n      case 'click':\n        console.log('clicked ', event.target); //globalDispatch({type:\"INC_MATCH\"})\n\n        setAppState(() => ({\n          rolls: rollsDice(),\n          match: appState.match + 1\n        }));\n        console.log('appState setted');\n        break;\n\n      default:\n        console.log('unhandled ', event.type);\n    }\n\n    ;\n  };\n\n  const changeRowsNum = value => {\n    setAppState({\n      rowsNum: appState.rowsNum + value,\n      colsNum: appState.colsNum + value\n    });\n    console.log('new rowsNum', appState.rowsNum);\n    console.log('new colsNum', appState.colsNum);\n  };\n\n  const decrementRows = () => {\n    console.log('decrement rows number');\n    changeRowsNum(-1);\n  };\n\n  const rollsDice = () => {\n    console.log('rollsDice'); //const [globalState, globalDispatch] = useContext(Context);\n\n    let rowsNum = 0;\n    let colsNum = 0;\n\n    if (typeof appState === 'undefined') {\n      rowsNum = 5;\n      colsNum = 5;\n      console.log('default rows and cols', rowsNum, colsNum);\n    } else {\n      rowsNum = appState.rowsNum;\n      colsNum = appState.colsNum;\n      console.log('state rows and cols', rowsNum, colsNum);\n    }\n\n    console.log('state type ', typeof appState);\n    console.log('state ', appState);\n    console.log(rowsNum, colsNum);\n    let rolls = []; //clone whole diceStack\n\n    let diceStack = [...dice];\n\n    while (diceStack.length > dice.length - rowsNum * colsNum) {\n      let dieNumber = Math.floor(Math.random() * diceStack.length);\n      let dieFace = Math.floor(Math.random() * 6);\n      rolls.push(diceStack[dieNumber][dieFace]);\n      diceStack.splice(dieNumber, 1);\n      console.log('diceStack ', diceStack.length);\n      console.log('soglia ', dice.length - rowsNum * colsNum);\n    }\n\n    console.log('dice number', rolls.length);\n    console.log('rolls', rolls);\n    return rolls;\n  };\n\n  return /*#__PURE__*/React.createElement(Store, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Ui, {\n    parentState: appState,\n    handleEvent: handleEvent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/daniele/Documents/GitHub/paroliere/src/App.js"],"names":["React","useContext","useEffect","useState","Board","dice","PrimarySearchAppBar","Paper","Button","ThemeProvider","Typography","InputBase","withStyles","theme","Ui","Store","Context","initialState","rowsNum","colsNum","rolls","match","totalTime","countDown","App","appState","setAppState","rollsDice","console","log","handleEvent","event","type","target","changeRowsNum","value","decrementRows","diceStack","length","dieNumber","Math","floor","random","dieFace","push","splice"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,aAAxB,EAAuCC,UAAvC,EAAmDC,SAAnD,QAAoE,mBAApE;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,EAAP,MAAe,iBAAf;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAAQC,OAAR,QAAsB,eAAtB,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACnBZ,EAAAA,IAAI,EAAEA,IADa;AAEnBa,EAAAA,OAAO,EAAC,CAFW;AAGnBC,EAAAA,OAAO,EAAC,CAHW;AAInBC,EAAAA,KAAK,EAAC,EAJa;AAKnBC,EAAAA,KAAK,EAAC,CALa;AAMnBC,EAAAA,SAAS,EAAC,EANS;AAOnBC,EAAAA,SAAS,EAAC;AAPS,CAArB;;AAUA,MAAMC,GAAG,GAAIP,YAAD,IAAkB;AAE5B,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0B1B,KAAK,CAACG,QAAN,CAAec,YAAf,CAAhC;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,WAAW,CAAC,OAAO;AACjBrB,MAAAA,IAAI,EAAEA,IADW;AAEjBa,MAAAA,OAAO,EAAC,CAFS;AAGjBC,MAAAA,OAAO,EAAC,CAHS;AAIjBC,MAAAA,KAAK,EAACO,SAAS,EAJE;AAKjBN,MAAAA,KAAK,EAAC,CALW;AAMjBC,MAAAA,SAAS,EAAC,EANO;AAOjBC,MAAAA,SAAS,EAAC;AAPO,KAAP,CAAD,CAAX;AASAK,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBJ,QAAxB;AACD,GAXQ,CAAT;;AAaE,QAAMK,WAAW,GAAIC,KAAD,IAAW;AAC7B,YAAQA,KAAK,CAACC,IAAd;AACE,WAAK,OAAL;AACEJ,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBE,KAAK,CAACE,MAA9B,EADF,CAEE;;AACAP,QAAAA,WAAW,CAAC,OACV;AACEN,UAAAA,KAAK,EAAEO,SAAS,EADlB;AAEEN,UAAAA,KAAK,EAAEI,QAAQ,CAACJ,KAAT,GAAiB;AAF1B,SADU,CAAD,CAAX;AAKEO,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACF;;AACF;AACED,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BE,KAAK,CAACC,IAAhC;AAZJ;;AAaD;AACF,GAfC;;AAkBF,QAAME,aAAa,GAAIC,KAAD,IAAW;AAC/BT,IAAAA,WAAW,CAAC;AACVR,MAAAA,OAAO,EAAEO,QAAQ,CAACP,OAAT,GAAmBiB,KADlB;AAEVhB,MAAAA,OAAO,EAAEM,QAAQ,CAACN,OAAT,GAAmBgB;AAFlB,KAAD,CAAX;AAIAP,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BJ,QAAQ,CAACP,OAApC;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BJ,QAAQ,CAACN,OAApC;AACD,GAPD;;AASA,QAAMiB,aAAa,GAAG,MAAM;AAC1BR,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAK,IAAAA,aAAa,CAAC,CAAC,CAAF,CAAb;AACD,GAHD;;AAMA,QAAMP,SAAS,GAAG,MAAM;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EADsB,CAEtB;;AACA,QAAIX,OAAO,GAAG,CAAd;AACA,QAAIC,OAAO,GAAG,CAAd;;AACA,QAAI,OAAQM,QAAR,KAAsB,WAA1B,EAAuC;AACrCP,MAAAA,OAAO,GAAG,CAAV;AACAC,MAAAA,OAAO,GAAG,CAAV;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCX,OAArC,EAA8CC,OAA9C;AACD,KAJD,MAKK;AACHD,MAAAA,OAAO,GAAGO,QAAQ,CAACP,OAAnB;AACAC,MAAAA,OAAO,GAAGM,QAAQ,CAACN,OAAnB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCX,OAAnC,EAA4CC,OAA5C;AACD;;AACDS,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,OAAQJ,QAAnC;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,QAAtB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ,EAAqBC,OAArB;AACA,QAAIC,KAAK,GAAG,EAAZ,CAlBsB,CAmBtB;;AACA,QAAIiB,SAAS,GAAG,CAAC,GAAGhC,IAAJ,CAAhB;;AACA,WAAOgC,SAAS,CAACC,MAAV,GAAmBjC,IAAI,CAACiC,MAAL,GAAepB,OAAO,GAAGC,OAAnD,EAA6D;AAC3D,UAAIoB,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,SAAS,CAACC,MAArC,CAAhB;AACA,UAAIK,OAAO,GAAGH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAd;AACAtB,MAAAA,KAAK,CAACwB,IAAN,CAAWP,SAAS,CAACE,SAAD,CAAT,CAAqBI,OAArB,CAAX;AACAN,MAAAA,SAAS,CAACQ,MAAV,CAAiBN,SAAjB,EAA4B,CAA5B;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BQ,SAAS,CAACC,MAApC;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBxB,IAAI,CAACiC,MAAL,GAAepB,OAAO,GAAGC,OAAhD;AACD;;AACDS,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BT,KAAK,CAACkB,MAAjC;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBT,KAArB;AACA,WAAOA,KAAP;AACD,GAhCD;;AAkCE,sBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEP,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,EAAD;AAAI,IAAA,WAAW,EAAIY,QAAnB;AAA6B,IAAA,WAAW,EAAEK,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAQD,CA5FH;;AA8FA,eAAeN,GAAf","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport './App.css';\nimport Board from './components/board'\nimport dice from './data'\nimport PrimarySearchAppBar from './components/myAppBar'\nimport { Paper, Button, ThemeProvider, Typography, InputBase } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles';\nimport theme from './theme';\nimport Ui from './components/ui'\nimport Store from \"./store/store\";\nimport {Context} from \"./store/store\"\n \n//import <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\nconst initialState = {\n  dice: dice,\n  rowsNum:5,\n  colsNum:5,\n  rolls:[],\n  match:0,\n  totalTime:10,\n  countDown:2\n}\n\nconst App = (initialState) => {\n  \n  const [appState, setAppState] = React.useState(initialState);\n  \n  useEffect(() => {\n    setAppState(() => ({\n      dice: dice,\n      rowsNum:5,\n      colsNum:5,\n      rolls:rollsDice(),\n      match:0,\n      totalTime:10,\n      countDown:2\n    }))\n    console.log('appState', appState)\n  });\n\n    const handleEvent = (event) => {\n      switch (event.type) {\n        case 'click':\n          console.log('clicked ', event.target);\n          //globalDispatch({type:\"INC_MATCH\"})\n          setAppState(() => (\n            {\n              rolls: rollsDice(),\n              match: appState.match + 1 \n            }))\n            console.log('appState setted')\n          break\n        default:\n          console.log('unhandled ', event.type)\n    };\n  }\n\n\n  const changeRowsNum = (value) => {\n    setAppState({\n      rowsNum: appState.rowsNum + value,\n      colsNum: appState.colsNum + value,\n    })\n    console.log('new rowsNum', appState.rowsNum)\n    console.log('new colsNum', appState.colsNum)\n  }\n\n  const decrementRows = () => {\n    console.log('decrement rows number')\n    changeRowsNum(-1);\n  }\n\n\n  const rollsDice = () => {\n    console.log('rollsDice')\n    //const [globalState, globalDispatch] = useContext(Context);\n    let rowsNum = 0\n    let colsNum = 0\n    if (typeof (appState) === 'undefined') {\n      rowsNum = 5\n      colsNum = 5\n      console.log('default rows and cols', rowsNum, colsNum)\n    }\n    else {\n      rowsNum = appState.rowsNum\n      colsNum = appState.colsNum\n      console.log('state rows and cols', rowsNum, colsNum)\n    }\n    console.log('state type ', typeof (appState))\n    console.log('state ', appState)\n    console.log(rowsNum, colsNum)\n    let rolls = []\n    //clone whole diceStack\n    let diceStack = [...dice]\n    while (diceStack.length > dice.length - (rowsNum * colsNum)) {\n      let dieNumber = Math.floor(Math.random() * diceStack.length);\n      let dieFace = Math.floor(Math.random() * 6);\n      rolls.push(diceStack[dieNumber][dieFace])\n      diceStack.splice(dieNumber, 1)\n      console.log('diceStack ', diceStack.length)\n      console.log('soglia ', dice.length - (rowsNum * colsNum))\n    }\n    console.log('dice number', rolls.length)\n    console.log('rolls', rolls)\n    return rolls\n  }\n  \n    return (\n      <Store>\n        <ThemeProvider theme={theme}>\n          <Ui parentState = {appState} handleEvent={handleEvent}\n          />\n        </ThemeProvider>\n      </Store>\n    )\n  }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}