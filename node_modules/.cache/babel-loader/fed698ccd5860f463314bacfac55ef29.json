{"ast":null,"code":"var _jsxFileName = \"/Users/daniele/Documents/GitHub/paroliere/src/components/board.js\";\nimport React, { Fragment } from 'react';\nimport Headers from './headers';\nimport Row from './row';\nconsole.log('Board');\n\nfunction Board({\n  rolls,\n  colsNum\n}) {\n  console.log(`printing board with ${rolls.length} rolls in ${colsNum} columns`);\n  console.log('rolls ', rolls);\n  console.log('columns', colsNum);\n  let rows = [];\n  let rowRolls = [];\n  let rowCounter = 1;\n  let y = 0;\n\n  for (let [index, roll] of rolls.entries()) {\n    console.log('index ' + index);\n    rowRolls.push({\n      x: rowCounter,\n      y: index / colsNum * rowCounter,\n      content: rolls[roll]\n    });\n\n    if (rowRolls.length === colsNum) {\n      console.log(`pushing rowRolls row_${(index + 1) / colsNum} into the board`);\n      rows.push( /*#__PURE__*/React.createElement(\"tr\", {\n        key: `row_${rowCounter}`.toString(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        key: `row_${rowCounter}`.toString(),\n        id: rowCounter,\n        rowRolls: rowRolls,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 68\n        }\n      })));\n      rowRolls = [];\n      rowCounter++;\n    }\n\n    return rows;\n  }\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/daniele/Documents/GitHub/paroliere/src/components/board.js"],"names":["React","Fragment","Headers","Row","console","log","Board","rolls","colsNum","length","rows","rowRolls","rowCounter","y","index","roll","entries","push","x","content","toString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACAC,OAAO,CAACC,GAAR,CAAY,OAAZ;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAf,EAAmC;AAE/BJ,EAAAA,OAAO,CAACC,GAAR,CAAa,uBAAsBE,KAAK,CAACE,MAAO,aAAYD,OAAQ,UAApE;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBE,KAAtB;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBG,OAAtB;AACA,MAAIE,IAAI,GAAG,EAAX;AACA,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,UAAU,GAAG,CAAjB;AACA,MAAIC,CAAC,GAAC,CAAN;;AACA,OAAK,IAAI,CAACC,KAAD,EAAQC,IAAR,CAAT,IAA0BR,KAAK,CAACS,OAAN,EAA1B,EAA2C;AACvCZ,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWS,KAAvB;AAEIH,IAAAA,QAAQ,CAACM,IAAT,CAAc;AACVC,MAAAA,CAAC,EAACN,UADQ;AAEVC,MAAAA,CAAC,EAACC,KAAK,GAACN,OAAN,GAAcI,UAFN;AAGVO,MAAAA,OAAO,EAAEZ,KAAK,CAACQ,IAAD;AAHJ,KAAd;;AAMA,QAAGJ,QAAQ,CAACF,MAAT,KAAoBD,OAAvB,EACA;AACIJ,MAAAA,OAAO,CAACC,GAAR,CAAa,wBAAuB,CAACS,KAAK,GAAC,CAAP,IAAUN,OAAQ,iBAAtD;AACAE,MAAAA,IAAI,CAACO,IAAL,eAAU;AAAI,QAAA,GAAG,EAAG,OAAML,UAAW,EAAlB,CAAoBQ,QAApB,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAyC,oBAAC,GAAD;AAAK,QAAA,GAAG,EAAG,OAAMR,UAAW,EAAlB,CAAoBQ,QAApB,EAAV;AAA0C,QAAA,EAAE,EAAER,UAA9C;AAA0D,QAAA,QAAQ,EAAED,QAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAzC,CAAV;AACAA,MAAAA,QAAQ,GAAG,EAAX;AACAC,MAAAA,UAAU;AACb;;AACR,WAAQF,IAAR;AACI;AACR;;AACD,eAAeJ,KAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport Headers from './headers'\nimport Row from './row'\nconsole.log('Board')\n\nfunction Board({ rolls, colsNum }) {\n\n    console.log(`printing board with ${rolls.length} rolls in ${colsNum} columns`)\n    console.log('rolls ', rolls)\n    console.log('columns',colsNum)\n    let rows = []\n    let rowRolls = []\n    let rowCounter = 1\n    let y=0\n    for (let [index, roll] of rolls.entries()) {\n        console.log('index ' + index)\n\n            rowRolls.push({\n                x:rowCounter,\n                y:index/colsNum*rowCounter,\n                content: rolls[roll]\n            })\n\n            if(rowRolls.length === colsNum) \n            {   \n                console.log(`pushing rowRolls row_${(index+1)/colsNum} into the board`)\n                rows.push(<tr key={`row_${rowCounter}`.toString()}><Row key={`row_${rowCounter}`.toString()} id={rowCounter} rowRolls={rowRolls}/></tr>)\n                rowRolls = []\n                rowCounter++\n            } \n     return (rows)\n        }\n}\nexport default Board"]},"metadata":{},"sourceType":"module"}