{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge, elementAcceptingRef } from '@material-ui/utils';\nimport { alpha } from '../styles/colorManipulator';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport Popper from '../Popper';\nimport useEventCallback from '../utils/useEventCallback';\nimport useForkRef from '../utils/useForkRef';\nimport useId from '../utils/useId';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useControlled from '../utils/useControlled';\nimport useTheme from '../styles/useTheme';\n\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\n\nfunction arrowGenerator() {\n  return {\n    '&[x-placement*=\"bottom\"] $arrow': {\n      top: 0,\n      left: 0,\n      marginTop: '-0.71em',\n      marginLeft: 4,\n      marginRight: 4,\n      '&::before': {\n        transformOrigin: '0 100%'\n      }\n    },\n    '&[x-placement*=\"top\"] $arrow': {\n      bottom: 0,\n      left: 0,\n      marginBottom: '-0.71em',\n      marginLeft: 4,\n      marginRight: 4,\n      '&::before': {\n        transformOrigin: '100% 0'\n      }\n    },\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: '-0.71em',\n      height: '1em',\n      width: '0.71em',\n      marginTop: 4,\n      marginBottom: 4,\n      '&::before': {\n        transformOrigin: '100% 100%'\n      }\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: '-0.71em',\n      height: '1em',\n      width: '0.71em',\n      marginTop: 4,\n      marginBottom: 4,\n      '&::before': {\n        transformOrigin: '0 0'\n      }\n    }\n  };\n}\n\nexport const styles = theme => ({\n  /* Styles applied to the Popper component. */\n  popper: {\n    zIndex: theme.zIndex.tooltip,\n    pointerEvents: 'none' // disable jss-rtl plugin\n\n  },\n\n  /* Styles applied to the Popper component unless `disableInteractive={true}`. */\n  popperInteractive: {\n    pointerEvents: 'auto'\n  },\n\n  /* Styles applied to the Popper component if `arrow={true}`. */\n  popperArrow: arrowGenerator(),\n\n  /* Styles applied to the tooltip (label wrapper) element. */\n  tooltip: {\n    backgroundColor: alpha(theme.palette.grey[700], 0.92),\n    borderRadius: theme.shape.borderRadius,\n    color: theme.palette.common.white,\n    fontFamily: theme.typography.fontFamily,\n    padding: '4px 8px',\n    fontSize: theme.typography.pxToRem(11),\n    maxWidth: 300,\n    wordWrap: 'break-word',\n    fontWeight: theme.typography.fontWeightMedium\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `arrow={true}`. */\n  tooltipArrow: {\n    position: 'relative',\n    margin: '0'\n  },\n\n  /* Styles applied to the arrow element. */\n  arrow: {\n    overflow: 'hidden',\n    position: 'absolute',\n    width: '1em',\n    height: '0.71em'\n    /* = width / sqrt(2) = (length of the hypotenuse) */\n    ,\n    boxSizing: 'border-box',\n    color: alpha(theme.palette.grey[700], 0.9),\n    '&::before': {\n      content: '\"\"',\n      margin: 'auto',\n      display: 'block',\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'currentColor',\n      transform: 'rotate(45deg)'\n    }\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if the tooltip is opened by touch. */\n  touch: {\n    padding: '8px 16px',\n    fontSize: theme.typography.pxToRem(14),\n    lineHeight: `${round(16 / 14)}em`,\n    fontWeight: theme.typography.fontWeightRegular\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"left\". */\n  tooltipPlacementLeft: {\n    transformOrigin: 'right center',\n    margin: '0 24px ',\n    [theme.breakpoints.up('sm')]: {\n      margin: '0 14px'\n    }\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"right\". */\n  tooltipPlacementRight: {\n    transformOrigin: 'left center',\n    margin: '0 24px',\n    [theme.breakpoints.up('sm')]: {\n      margin: '0 14px'\n    }\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"top\". */\n  tooltipPlacementTop: {\n    transformOrigin: 'center bottom',\n    margin: '24px 0',\n    [theme.breakpoints.up('sm')]: {\n      margin: '14px 0'\n    }\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"bottom\". */\n  tooltipPlacementBottom: {\n    transformOrigin: 'center top',\n    margin: '24px 0',\n    [theme.breakpoints.up('sm')]: {\n      margin: '14px 0'\n    }\n  }\n});\nlet hystersisOpen = false;\nlet hystersisTimer = null;\nexport function testReset() {\n  hystersisOpen = false;\n  clearTimeout(hystersisTimer);\n}\n\nfunction composeEventHandler(handler, eventHandler) {\n  return event => {\n    if (eventHandler) {\n      eventHandler(event);\n    }\n\n    handler(event);\n  };\n}\n\nconst Tooltip = /*#__PURE__*/React.forwardRef(function Tooltip(props, ref) {\n  const {\n    arrow = false,\n    children,\n    classes,\n    describeChild = false,\n    disableFocusListener = false,\n    disableHoverListener = false,\n    disableTouchListener = false,\n    enterDelay = 100,\n    enterNextDelay = 0,\n    enterTouchDelay = 700,\n    followCursor = false,\n    id: idProp,\n    disableInteractive = false,\n    leaveDelay = 0,\n    leaveTouchDelay = 1500,\n    onClose,\n    onOpen,\n    open: openProp,\n    placement = 'bottom',\n    PopperComponent = Popper,\n    PopperProps,\n    title,\n    TransitionComponent = Grow,\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"arrow\", \"children\", \"classes\", \"describeChild\", \"disableFocusListener\", \"disableHoverListener\", \"disableTouchListener\", \"enterDelay\", \"enterNextDelay\", \"enterTouchDelay\", \"followCursor\", \"id\", \"disableInteractive\", \"leaveDelay\", \"leaveTouchDelay\", \"onClose\", \"onOpen\", \"open\", \"placement\", \"PopperComponent\", \"PopperProps\", \"title\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  const theme = useTheme();\n  const [childNode, setChildNode] = React.useState();\n  const [arrowRef, setArrowRef] = React.useState(null);\n  const ignoreNonTouchEvents = React.useRef(false);\n  const closeTimer = React.useRef();\n  const enterTimer = React.useRef();\n  const leaveTimer = React.useRef();\n  const touchTimer = React.useRef();\n  const [openState, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: 'Tooltip',\n    state: 'open'\n  });\n  let open = openState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const {\n      current: isControlled\n    } = React.useRef(openProp !== undefined); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useEffect(() => {\n      if (childNode && childNode.disabled && !isControlled && title !== '' && childNode.tagName.toLowerCase() === 'button') {\n        console.error(['Material-UI: You are providing a disabled `button` child to the Tooltip component.', 'A disabled element does not fire events.', \"Tooltip needs to listen to the child element's events to display the title.\", '', 'Add a simple wrapper element, such as a `span`.'].join('\\n'));\n      }\n    }, [title, childNode, isControlled]);\n  }\n\n  const id = useId(idProp);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(closeTimer.current);\n      clearTimeout(enterTimer.current);\n      clearTimeout(leaveTimer.current);\n      clearTimeout(touchTimer.current);\n    };\n  }, []);\n\n  const handleOpen = event => {\n    clearTimeout(hystersisTimer);\n    hystersisOpen = true; // The mouseover event will trigger for every nested element in the tooltip.\n    // We can skip rerendering when the tooltip is already open.\n    // We are using the mouseover event instead of the mouseenter event to fix a hide/show issue.\n\n    setOpenState(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  const handleClose = useEventCallback(\n  /**\n   * @param {React.SyntheticEvent | Event} event\n   */\n  event => {\n    clearTimeout(hystersisTimer);\n    hystersisTimer = setTimeout(() => {\n      hystersisOpen = false;\n    }, 800 + leaveDelay);\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event);\n    }\n\n    clearTimeout(closeTimer.current);\n    closeTimer.current = setTimeout(() => {\n      ignoreNonTouchEvents.current = false;\n    }, theme.transitions.duration.shortest);\n  });\n\n  const handleEnter = event => {\n    if (ignoreNonTouchEvents.current && event.type !== 'touchstart') {\n      return;\n    } // Remove the title ahead of time.\n    // We don't want to wait for the next render commit.\n    // We would risk displaying two tooltips at the same time (native + this one).\n\n\n    if (childNode) {\n      childNode.removeAttribute('title');\n    }\n\n    clearTimeout(enterTimer.current);\n    clearTimeout(leaveTimer.current);\n\n    if (enterDelay || hystersisOpen && enterNextDelay) {\n      event.persist();\n      enterTimer.current = setTimeout(() => {\n        handleOpen(event);\n      }, hystersisOpen ? enterNextDelay : enterDelay);\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  const handleLeave = event => {\n    clearTimeout(enterTimer.current);\n    clearTimeout(leaveTimer.current);\n    event.persist();\n    leaveTimer.current = setTimeout(() => {\n      handleClose(event);\n    }, leaveDelay);\n  };\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible(); // We don't necessarily care about the focusVisible state (which is safe to access via ref anyway).\n  // We just need to re-render the Tooltip if the focus-visible state changes.\n\n  const [, setChildIsFocusVisible] = React.useState(false);\n\n  const handleBlur = event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setChildIsFocusVisible(false);\n      handleLeave(event);\n    }\n  };\n\n  const handleFocus = event => {\n    // Workaround for https://github.com/facebook/react/issues/7769\n    // The autoFocus of React might trigger the event before the componentDidMount.\n    // We need to account for this eventuality.\n    if (!childNode) {\n      setChildNode(event.currentTarget);\n    }\n\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setChildIsFocusVisible(true);\n      handleEnter(event);\n    }\n  };\n\n  const detectTouchStart = event => {\n    ignoreNonTouchEvents.current = true;\n    const childrenProps = children.props;\n\n    if (childrenProps.onTouchStart) {\n      childrenProps.onTouchStart(event);\n    }\n  };\n\n  const handleMouseOver = handleEnter;\n  const handleMouseLeave = handleLeave;\n\n  const handleTouchStart = event => {\n    detectTouchStart(event);\n    clearTimeout(leaveTimer.current);\n    clearTimeout(closeTimer.current);\n    clearTimeout(touchTimer.current);\n    event.persist();\n    touchTimer.current = setTimeout(() => {\n      handleEnter(event);\n    }, enterTouchDelay);\n  };\n\n  const handleTouchEnd = event => {\n    if (children.props.onTouchEnd) {\n      children.props.onTouchEnd(event);\n    }\n\n    clearTimeout(touchTimer.current);\n    clearTimeout(leaveTimer.current);\n    event.persist();\n    leaveTimer.current = setTimeout(() => {\n      handleClose(event);\n    }, leaveTouchDelay);\n  };\n\n  React.useEffect(() => {\n    if (!open) {\n      return undefined;\n    }\n    /**\n     * @param {KeyboardEvent} nativeEvent\n     */\n\n\n    function handleKeyDown(nativeEvent) {\n      // IE11, Edge (prior to using Bink?) use 'Esc'\n      if (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc') {\n        handleClose(nativeEvent);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleClose, open]);\n  const handleUseRef = useForkRef(setChildNode, ref);\n  const handleFocusRef = useForkRef(focusVisibleRef, handleUseRef);\n  const handleRef = useForkRef(children.ref, handleFocusRef); // There is no point in displaying an empty tooltip.\n\n  if (title === '') {\n    open = false;\n  }\n\n  const positionRef = React.useRef({\n    x: 0,\n    y: 0\n  });\n  const popperRef = React.useRef();\n\n  const handleMouseMove = event => {\n    const childrenProps = children.props;\n\n    if (childrenProps.onMouseMove) {\n      childrenProps.onMouseMove(event);\n    }\n\n    positionRef.current = {\n      x: event.clientX,\n      y: event.clientY\n    };\n\n    if (popperRef.current) {\n      popperRef.current.scheduleUpdate();\n    }\n  };\n\n  const nameOrDescProps = {};\n  const titleIsString = typeof title === 'string';\n\n  if (describeChild) {\n    nameOrDescProps['title'] = !open && titleIsString && !disableHoverListener ? title : null;\n    nameOrDescProps['aria-describedby'] = open ? id : null;\n  } else {\n    nameOrDescProps['aria-label'] = titleIsString ? title : null;\n    nameOrDescProps['aria-labelledby'] = open && !titleIsString ? id : null;\n  }\n\n  const childrenProps = _extends({}, nameOrDescProps, other, children.props, {\n    className: clsx(other.className, children.props.className),\n    onTouchStart: detectTouchStart,\n    ref: handleRef\n  }, followCursor ? {\n    onMouseMove: handleMouseMove\n  } : {});\n\n  if (process.env.NODE_ENV !== 'production') {\n    childrenProps['data-mui-internal-clone-element'] = true; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useEffect(() => {\n      if (childNode && !childNode.getAttribute('data-mui-internal-clone-element')) {\n        console.error(['Material-UI: The `children` component of the Tooltip is not forwarding its props correctly.', 'Please make sure that props are spread on the same element that the ref is applied to.'].join('\\n'));\n      }\n    }, [childNode]);\n  }\n\n  const interactiveWrapperListeners = {};\n\n  if (!disableTouchListener) {\n    childrenProps.onTouchStart = handleTouchStart;\n    childrenProps.onTouchEnd = handleTouchEnd;\n  }\n\n  if (!disableHoverListener) {\n    childrenProps.onMouseOver = composeEventHandler(handleMouseOver, childrenProps.onMouseOver);\n    childrenProps.onMouseLeave = composeEventHandler(handleMouseLeave, childrenProps.onMouseLeave);\n\n    if (!disableInteractive) {\n      interactiveWrapperListeners.onMouseOver = handleMouseOver;\n      interactiveWrapperListeners.onMouseLeave = handleMouseLeave;\n    }\n  }\n\n  if (!disableFocusListener) {\n    childrenProps.onFocus = composeEventHandler(handleFocus, childrenProps.onFocus);\n    childrenProps.onBlur = composeEventHandler(handleBlur, childrenProps.onBlur);\n\n    if (!disableInteractive) {\n      interactiveWrapperListeners.onFocus = handleFocus;\n      interactiveWrapperListeners.onBlur = handleBlur;\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (children.props.title) {\n      console.error(['Material-UI: You have provided a `title` prop to the child of <Tooltip />.', `Remove this title prop \\`${children.props.title}\\` or the Tooltip component.`].join('\\n'));\n    }\n  }\n\n  const mergedPopperProps = React.useMemo(() => {\n    return deepmerge({\n      popperOptions: {\n        modifiers: {\n          arrow: {\n            enabled: Boolean(arrowRef),\n            element: arrowRef\n          }\n        }\n      }\n    }, PopperProps);\n  }, [arrowRef, PopperProps]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.cloneElement(children, childrenProps), /*#__PURE__*/React.createElement(PopperComponent, _extends({\n    className: clsx(classes.popper, !disableInteractive && classes.popperInteractive, arrow && classes.popperArrow),\n    placement: placement,\n    anchorEl: followCursor ? {\n      clientHeight: 0,\n      clientWidth: 0,\n      getBoundingClientRect: () => ({\n        top: positionRef.current.y,\n        left: positionRef.current.x,\n        right: positionRef.current.x,\n        bottom: positionRef.current.y,\n        width: 0,\n        height: 0\n      })\n    } : childNode,\n    popperRef: popperRef,\n    open: childNode ? open : false,\n    id: id,\n    transition: true\n  }, interactiveWrapperListeners, mergedPopperProps), ({\n    placement: placementInner,\n    TransitionProps: TransitionPropsInner\n  }) => /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    timeout: theme.transitions.duration.shorter\n  }, TransitionPropsInner, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.tooltip, classes[`tooltipPlacement${capitalize(placementInner.split('-')[0])}`], ignoreNonTouchEvents.current && classes.touch, arrow && classes.tooltipArrow)\n  }, title, arrow ? /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.arrow,\n    ref: setArrowRef\n  }) : null))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Tooltip.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, adds an arrow to the tooltip.\n   * @default false\n   */\n  arrow: PropTypes.bool,\n\n  /**\n   * Tooltip reference element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Set to `true` if the `title` acts as an accessible description.\n   * By default the `title` acts as an accessible label for the child.\n   * @default false\n   */\n  describeChild: PropTypes.bool,\n\n  /**\n   * Do not respond to focus events.\n   * @default false\n   */\n  disableFocusListener: PropTypes.bool,\n\n  /**\n   * Do not respond to hover events.\n   * @default false\n   */\n  disableHoverListener: PropTypes.bool,\n\n  /**\n   * Makes a tooltip not interactive, i.e. it will close when the user\n   * hovers over the tooltip before the `leaveDelay` is expired.\n   * @default false\n   */\n  disableInteractive: PropTypes.bool,\n\n  /**\n   * Do not respond to long press touch events.\n   * @default false\n   */\n  disableTouchListener: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before showing the tooltip.\n   * This prop won't impact the enter touch delay (`enterTouchDelay`).\n   * @default 100\n   */\n  enterDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.\n   * @default 0\n   */\n  enterNextDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds a user must touch the element before showing the tooltip.\n   * @default 700\n   */\n  enterTouchDelay: PropTypes.number,\n\n  /**\n   * If `true`, the tooltip follow the cursor over the wrapped element.\n   * @default false\n   */\n  followCursor: PropTypes.bool,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The number of milliseconds to wait before hiding the tooltip.\n   * This prop won't impact the leave touch delay (`leaveTouchDelay`).\n   * @default 0\n   */\n  leaveDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds after the user stops touching an element before hiding the tooltip.\n   * @default 1500\n   */\n  leaveTouchDelay: PropTypes.number,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be open.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the tooltip is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Tooltip placement.\n   * @default 'bottom'\n   */\n  placement: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /**\n   * The component used for the popper.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Popper`](/api/popper/) element.\n   */\n  PopperProps: PropTypes.object,\n\n  /**\n   * Tooltip title. Zero-length titles string are never displayed.\n   */\n  title: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Grow\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTooltip',\n  flip: false\n})(Tooltip);","map":{"version":3,"sources":["/Users/daniele/Documents/GitHub/paroliere/node_modules/@material-ui/core/Tooltip/Tooltip.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","deepmerge","elementAcceptingRef","alpha","withStyles","capitalize","Grow","Popper","useEventCallback","useForkRef","useId","useIsFocusVisible","useControlled","useTheme","round","value","Math","arrowGenerator","top","left","marginTop","marginLeft","marginRight","transformOrigin","bottom","marginBottom","height","width","right","styles","theme","popper","zIndex","tooltip","pointerEvents","popperInteractive","popperArrow","backgroundColor","palette","grey","borderRadius","shape","color","common","white","fontFamily","typography","padding","fontSize","pxToRem","maxWidth","wordWrap","fontWeight","fontWeightMedium","tooltipArrow","position","margin","arrow","overflow","boxSizing","content","display","transform","touch","lineHeight","fontWeightRegular","tooltipPlacementLeft","breakpoints","up","tooltipPlacementRight","tooltipPlacementTop","tooltipPlacementBottom","hystersisOpen","hystersisTimer","testReset","clearTimeout","composeEventHandler","handler","eventHandler","event","Tooltip","forwardRef","props","ref","children","classes","describeChild","disableFocusListener","disableHoverListener","disableTouchListener","enterDelay","enterNextDelay","enterTouchDelay","followCursor","id","idProp","disableInteractive","leaveDelay","leaveTouchDelay","onClose","onOpen","open","openProp","placement","PopperComponent","PopperProps","title","TransitionComponent","TransitionProps","other","childNode","setChildNode","useState","arrowRef","setArrowRef","ignoreNonTouchEvents","useRef","closeTimer","enterTimer","leaveTimer","touchTimer","openState","setOpenState","controlled","default","name","state","process","env","NODE_ENV","current","isControlled","undefined","useEffect","disabled","tagName","toLowerCase","console","error","join","handleOpen","handleClose","setTimeout","transitions","duration","shortest","handleEnter","type","removeAttribute","persist","handleLeave","isFocusVisibleRef","onBlur","handleBlurVisible","onFocus","handleFocusVisible","focusVisibleRef","setChildIsFocusVisible","handleBlur","handleFocus","currentTarget","detectTouchStart","childrenProps","onTouchStart","handleMouseOver","handleMouseLeave","handleTouchStart","handleTouchEnd","onTouchEnd","handleKeyDown","nativeEvent","key","document","addEventListener","removeEventListener","handleUseRef","handleFocusRef","handleRef","positionRef","x","y","popperRef","handleMouseMove","onMouseMove","clientX","clientY","scheduleUpdate","nameOrDescProps","titleIsString","className","getAttribute","interactiveWrapperListeners","onMouseOver","onMouseLeave","mergedPopperProps","useMemo","popperOptions","modifiers","enabled","Boolean","element","createElement","Fragment","cloneElement","anchorEl","clientHeight","clientWidth","getBoundingClientRect","transition","placementInner","TransitionPropsInner","timeout","shorter","split","propTypes","bool","isRequired","object","string","number","func","oneOf","elementType","node","flip"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge, elementAcceptingRef } from '@material-ui/utils';\nimport { alpha } from '../styles/colorManipulator';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport Popper from '../Popper';\nimport useEventCallback from '../utils/useEventCallback';\nimport useForkRef from '../utils/useForkRef';\nimport useId from '../utils/useId';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useControlled from '../utils/useControlled';\nimport useTheme from '../styles/useTheme';\n\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\n\nfunction arrowGenerator() {\n  return {\n    '&[x-placement*=\"bottom\"] $arrow': {\n      top: 0,\n      left: 0,\n      marginTop: '-0.71em',\n      marginLeft: 4,\n      marginRight: 4,\n      '&::before': {\n        transformOrigin: '0 100%'\n      }\n    },\n    '&[x-placement*=\"top\"] $arrow': {\n      bottom: 0,\n      left: 0,\n      marginBottom: '-0.71em',\n      marginLeft: 4,\n      marginRight: 4,\n      '&::before': {\n        transformOrigin: '100% 0'\n      }\n    },\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: '-0.71em',\n      height: '1em',\n      width: '0.71em',\n      marginTop: 4,\n      marginBottom: 4,\n      '&::before': {\n        transformOrigin: '100% 100%'\n      }\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: '-0.71em',\n      height: '1em',\n      width: '0.71em',\n      marginTop: 4,\n      marginBottom: 4,\n      '&::before': {\n        transformOrigin: '0 0'\n      }\n    }\n  };\n}\n\nexport const styles = theme => ({\n  /* Styles applied to the Popper component. */\n  popper: {\n    zIndex: theme.zIndex.tooltip,\n    pointerEvents: 'none' // disable jss-rtl plugin\n\n  },\n\n  /* Styles applied to the Popper component unless `disableInteractive={true}`. */\n  popperInteractive: {\n    pointerEvents: 'auto'\n  },\n\n  /* Styles applied to the Popper component if `arrow={true}`. */\n  popperArrow: arrowGenerator(),\n\n  /* Styles applied to the tooltip (label wrapper) element. */\n  tooltip: {\n    backgroundColor: alpha(theme.palette.grey[700], 0.92),\n    borderRadius: theme.shape.borderRadius,\n    color: theme.palette.common.white,\n    fontFamily: theme.typography.fontFamily,\n    padding: '4px 8px',\n    fontSize: theme.typography.pxToRem(11),\n    maxWidth: 300,\n    wordWrap: 'break-word',\n    fontWeight: theme.typography.fontWeightMedium\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `arrow={true}`. */\n  tooltipArrow: {\n    position: 'relative',\n    margin: '0'\n  },\n\n  /* Styles applied to the arrow element. */\n  arrow: {\n    overflow: 'hidden',\n    position: 'absolute',\n    width: '1em',\n    height: '0.71em'\n    /* = width / sqrt(2) = (length of the hypotenuse) */\n    ,\n    boxSizing: 'border-box',\n    color: alpha(theme.palette.grey[700], 0.9),\n    '&::before': {\n      content: '\"\"',\n      margin: 'auto',\n      display: 'block',\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'currentColor',\n      transform: 'rotate(45deg)'\n    }\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if the tooltip is opened by touch. */\n  touch: {\n    padding: '8px 16px',\n    fontSize: theme.typography.pxToRem(14),\n    lineHeight: `${round(16 / 14)}em`,\n    fontWeight: theme.typography.fontWeightRegular\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"left\". */\n  tooltipPlacementLeft: {\n    transformOrigin: 'right center',\n    margin: '0 24px ',\n    [theme.breakpoints.up('sm')]: {\n      margin: '0 14px'\n    }\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"right\". */\n  tooltipPlacementRight: {\n    transformOrigin: 'left center',\n    margin: '0 24px',\n    [theme.breakpoints.up('sm')]: {\n      margin: '0 14px'\n    }\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"top\". */\n  tooltipPlacementTop: {\n    transformOrigin: 'center bottom',\n    margin: '24px 0',\n    [theme.breakpoints.up('sm')]: {\n      margin: '14px 0'\n    }\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"bottom\". */\n  tooltipPlacementBottom: {\n    transformOrigin: 'center top',\n    margin: '24px 0',\n    [theme.breakpoints.up('sm')]: {\n      margin: '14px 0'\n    }\n  }\n});\nlet hystersisOpen = false;\nlet hystersisTimer = null;\nexport function testReset() {\n  hystersisOpen = false;\n  clearTimeout(hystersisTimer);\n}\n\nfunction composeEventHandler(handler, eventHandler) {\n  return event => {\n    if (eventHandler) {\n      eventHandler(event);\n    }\n\n    handler(event);\n  };\n}\n\nconst Tooltip = /*#__PURE__*/React.forwardRef(function Tooltip(props, ref) {\n  const {\n    arrow = false,\n    children,\n    classes,\n    describeChild = false,\n    disableFocusListener = false,\n    disableHoverListener = false,\n    disableTouchListener = false,\n    enterDelay = 100,\n    enterNextDelay = 0,\n    enterTouchDelay = 700,\n    followCursor = false,\n    id: idProp,\n    disableInteractive = false,\n    leaveDelay = 0,\n    leaveTouchDelay = 1500,\n    onClose,\n    onOpen,\n    open: openProp,\n    placement = 'bottom',\n    PopperComponent = Popper,\n    PopperProps,\n    title,\n    TransitionComponent = Grow,\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"arrow\", \"children\", \"classes\", \"describeChild\", \"disableFocusListener\", \"disableHoverListener\", \"disableTouchListener\", \"enterDelay\", \"enterNextDelay\", \"enterTouchDelay\", \"followCursor\", \"id\", \"disableInteractive\", \"leaveDelay\", \"leaveTouchDelay\", \"onClose\", \"onOpen\", \"open\", \"placement\", \"PopperComponent\", \"PopperProps\", \"title\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  const theme = useTheme();\n  const [childNode, setChildNode] = React.useState();\n  const [arrowRef, setArrowRef] = React.useState(null);\n  const ignoreNonTouchEvents = React.useRef(false);\n  const closeTimer = React.useRef();\n  const enterTimer = React.useRef();\n  const leaveTimer = React.useRef();\n  const touchTimer = React.useRef();\n  const [openState, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: 'Tooltip',\n    state: 'open'\n  });\n  let open = openState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const {\n      current: isControlled\n    } = React.useRef(openProp !== undefined); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useEffect(() => {\n      if (childNode && childNode.disabled && !isControlled && title !== '' && childNode.tagName.toLowerCase() === 'button') {\n        console.error(['Material-UI: You are providing a disabled `button` child to the Tooltip component.', 'A disabled element does not fire events.', \"Tooltip needs to listen to the child element's events to display the title.\", '', 'Add a simple wrapper element, such as a `span`.'].join('\\n'));\n      }\n    }, [title, childNode, isControlled]);\n  }\n\n  const id = useId(idProp);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(closeTimer.current);\n      clearTimeout(enterTimer.current);\n      clearTimeout(leaveTimer.current);\n      clearTimeout(touchTimer.current);\n    };\n  }, []);\n\n  const handleOpen = event => {\n    clearTimeout(hystersisTimer);\n    hystersisOpen = true; // The mouseover event will trigger for every nested element in the tooltip.\n    // We can skip rerendering when the tooltip is already open.\n    // We are using the mouseover event instead of the mouseenter event to fix a hide/show issue.\n\n    setOpenState(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  const handleClose = useEventCallback(\n  /**\n   * @param {React.SyntheticEvent | Event} event\n   */\n  event => {\n    clearTimeout(hystersisTimer);\n    hystersisTimer = setTimeout(() => {\n      hystersisOpen = false;\n    }, 800 + leaveDelay);\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event);\n    }\n\n    clearTimeout(closeTimer.current);\n    closeTimer.current = setTimeout(() => {\n      ignoreNonTouchEvents.current = false;\n    }, theme.transitions.duration.shortest);\n  });\n\n  const handleEnter = event => {\n    if (ignoreNonTouchEvents.current && event.type !== 'touchstart') {\n      return;\n    } // Remove the title ahead of time.\n    // We don't want to wait for the next render commit.\n    // We would risk displaying two tooltips at the same time (native + this one).\n\n\n    if (childNode) {\n      childNode.removeAttribute('title');\n    }\n\n    clearTimeout(enterTimer.current);\n    clearTimeout(leaveTimer.current);\n\n    if (enterDelay || hystersisOpen && enterNextDelay) {\n      event.persist();\n      enterTimer.current = setTimeout(() => {\n        handleOpen(event);\n      }, hystersisOpen ? enterNextDelay : enterDelay);\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  const handleLeave = event => {\n    clearTimeout(enterTimer.current);\n    clearTimeout(leaveTimer.current);\n    event.persist();\n    leaveTimer.current = setTimeout(() => {\n      handleClose(event);\n    }, leaveDelay);\n  };\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible(); // We don't necessarily care about the focusVisible state (which is safe to access via ref anyway).\n  // We just need to re-render the Tooltip if the focus-visible state changes.\n\n  const [, setChildIsFocusVisible] = React.useState(false);\n\n  const handleBlur = event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setChildIsFocusVisible(false);\n      handleLeave(event);\n    }\n  };\n\n  const handleFocus = event => {\n    // Workaround for https://github.com/facebook/react/issues/7769\n    // The autoFocus of React might trigger the event before the componentDidMount.\n    // We need to account for this eventuality.\n    if (!childNode) {\n      setChildNode(event.currentTarget);\n    }\n\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setChildIsFocusVisible(true);\n      handleEnter(event);\n    }\n  };\n\n  const detectTouchStart = event => {\n    ignoreNonTouchEvents.current = true;\n    const childrenProps = children.props;\n\n    if (childrenProps.onTouchStart) {\n      childrenProps.onTouchStart(event);\n    }\n  };\n\n  const handleMouseOver = handleEnter;\n  const handleMouseLeave = handleLeave;\n\n  const handleTouchStart = event => {\n    detectTouchStart(event);\n    clearTimeout(leaveTimer.current);\n    clearTimeout(closeTimer.current);\n    clearTimeout(touchTimer.current);\n    event.persist();\n    touchTimer.current = setTimeout(() => {\n      handleEnter(event);\n    }, enterTouchDelay);\n  };\n\n  const handleTouchEnd = event => {\n    if (children.props.onTouchEnd) {\n      children.props.onTouchEnd(event);\n    }\n\n    clearTimeout(touchTimer.current);\n    clearTimeout(leaveTimer.current);\n    event.persist();\n    leaveTimer.current = setTimeout(() => {\n      handleClose(event);\n    }, leaveTouchDelay);\n  };\n\n  React.useEffect(() => {\n    if (!open) {\n      return undefined;\n    }\n    /**\n     * @param {KeyboardEvent} nativeEvent\n     */\n\n\n    function handleKeyDown(nativeEvent) {\n      // IE11, Edge (prior to using Bink?) use 'Esc'\n      if (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc') {\n        handleClose(nativeEvent);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleClose, open]);\n  const handleUseRef = useForkRef(setChildNode, ref);\n  const handleFocusRef = useForkRef(focusVisibleRef, handleUseRef);\n  const handleRef = useForkRef(children.ref, handleFocusRef); // There is no point in displaying an empty tooltip.\n\n  if (title === '') {\n    open = false;\n  }\n\n  const positionRef = React.useRef({\n    x: 0,\n    y: 0\n  });\n  const popperRef = React.useRef();\n\n  const handleMouseMove = event => {\n    const childrenProps = children.props;\n\n    if (childrenProps.onMouseMove) {\n      childrenProps.onMouseMove(event);\n    }\n\n    positionRef.current = {\n      x: event.clientX,\n      y: event.clientY\n    };\n\n    if (popperRef.current) {\n      popperRef.current.scheduleUpdate();\n    }\n  };\n\n  const nameOrDescProps = {};\n  const titleIsString = typeof title === 'string';\n\n  if (describeChild) {\n    nameOrDescProps['title'] = !open && titleIsString && !disableHoverListener ? title : null;\n    nameOrDescProps['aria-describedby'] = open ? id : null;\n  } else {\n    nameOrDescProps['aria-label'] = titleIsString ? title : null;\n    nameOrDescProps['aria-labelledby'] = open && !titleIsString ? id : null;\n  }\n\n  const childrenProps = _extends({}, nameOrDescProps, other, children.props, {\n    className: clsx(other.className, children.props.className),\n    onTouchStart: detectTouchStart,\n    ref: handleRef\n  }, followCursor ? {\n    onMouseMove: handleMouseMove\n  } : {});\n\n  if (process.env.NODE_ENV !== 'production') {\n    childrenProps['data-mui-internal-clone-element'] = true; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useEffect(() => {\n      if (childNode && !childNode.getAttribute('data-mui-internal-clone-element')) {\n        console.error(['Material-UI: The `children` component of the Tooltip is not forwarding its props correctly.', 'Please make sure that props are spread on the same element that the ref is applied to.'].join('\\n'));\n      }\n    }, [childNode]);\n  }\n\n  const interactiveWrapperListeners = {};\n\n  if (!disableTouchListener) {\n    childrenProps.onTouchStart = handleTouchStart;\n    childrenProps.onTouchEnd = handleTouchEnd;\n  }\n\n  if (!disableHoverListener) {\n    childrenProps.onMouseOver = composeEventHandler(handleMouseOver, childrenProps.onMouseOver);\n    childrenProps.onMouseLeave = composeEventHandler(handleMouseLeave, childrenProps.onMouseLeave);\n\n    if (!disableInteractive) {\n      interactiveWrapperListeners.onMouseOver = handleMouseOver;\n      interactiveWrapperListeners.onMouseLeave = handleMouseLeave;\n    }\n  }\n\n  if (!disableFocusListener) {\n    childrenProps.onFocus = composeEventHandler(handleFocus, childrenProps.onFocus);\n    childrenProps.onBlur = composeEventHandler(handleBlur, childrenProps.onBlur);\n\n    if (!disableInteractive) {\n      interactiveWrapperListeners.onFocus = handleFocus;\n      interactiveWrapperListeners.onBlur = handleBlur;\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (children.props.title) {\n      console.error(['Material-UI: You have provided a `title` prop to the child of <Tooltip />.', `Remove this title prop \\`${children.props.title}\\` or the Tooltip component.`].join('\\n'));\n    }\n  }\n\n  const mergedPopperProps = React.useMemo(() => {\n    return deepmerge({\n      popperOptions: {\n        modifiers: {\n          arrow: {\n            enabled: Boolean(arrowRef),\n            element: arrowRef\n          }\n        }\n      }\n    }, PopperProps);\n  }, [arrowRef, PopperProps]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.cloneElement(children, childrenProps), /*#__PURE__*/React.createElement(PopperComponent, _extends({\n    className: clsx(classes.popper, !disableInteractive && classes.popperInteractive, arrow && classes.popperArrow),\n    placement: placement,\n    anchorEl: followCursor ? {\n      clientHeight: 0,\n      clientWidth: 0,\n      getBoundingClientRect: () => ({\n        top: positionRef.current.y,\n        left: positionRef.current.x,\n        right: positionRef.current.x,\n        bottom: positionRef.current.y,\n        width: 0,\n        height: 0\n      })\n    } : childNode,\n    popperRef: popperRef,\n    open: childNode ? open : false,\n    id: id,\n    transition: true\n  }, interactiveWrapperListeners, mergedPopperProps), ({\n    placement: placementInner,\n    TransitionProps: TransitionPropsInner\n  }) => /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    timeout: theme.transitions.duration.shorter\n  }, TransitionPropsInner, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.tooltip, classes[`tooltipPlacement${capitalize(placementInner.split('-')[0])}`], ignoreNonTouchEvents.current && classes.touch, arrow && classes.tooltipArrow)\n  }, title, arrow ? /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.arrow,\n    ref: setArrowRef\n  }) : null))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Tooltip.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, adds an arrow to the tooltip.\n   * @default false\n   */\n  arrow: PropTypes.bool,\n\n  /**\n   * Tooltip reference element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Set to `true` if the `title` acts as an accessible description.\n   * By default the `title` acts as an accessible label for the child.\n   * @default false\n   */\n  describeChild: PropTypes.bool,\n\n  /**\n   * Do not respond to focus events.\n   * @default false\n   */\n  disableFocusListener: PropTypes.bool,\n\n  /**\n   * Do not respond to hover events.\n   * @default false\n   */\n  disableHoverListener: PropTypes.bool,\n\n  /**\n   * Makes a tooltip not interactive, i.e. it will close when the user\n   * hovers over the tooltip before the `leaveDelay` is expired.\n   * @default false\n   */\n  disableInteractive: PropTypes.bool,\n\n  /**\n   * Do not respond to long press touch events.\n   * @default false\n   */\n  disableTouchListener: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before showing the tooltip.\n   * This prop won't impact the enter touch delay (`enterTouchDelay`).\n   * @default 100\n   */\n  enterDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.\n   * @default 0\n   */\n  enterNextDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds a user must touch the element before showing the tooltip.\n   * @default 700\n   */\n  enterTouchDelay: PropTypes.number,\n\n  /**\n   * If `true`, the tooltip follow the cursor over the wrapped element.\n   * @default false\n   */\n  followCursor: PropTypes.bool,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The number of milliseconds to wait before hiding the tooltip.\n   * This prop won't impact the leave touch delay (`leaveTouchDelay`).\n   * @default 0\n   */\n  leaveDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds after the user stops touching an element before hiding the tooltip.\n   * @default 1500\n   */\n  leaveTouchDelay: PropTypes.number,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be open.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the tooltip is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Tooltip placement.\n   * @default 'bottom'\n   */\n  placement: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /**\n   * The component used for the popper.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Popper`](/api/popper/) element.\n   */\n  PopperProps: PropTypes.object,\n\n  /**\n   * Tooltip title. Zero-length titles string are never displayed.\n   */\n  title: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Grow\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTooltip',\n  flip: false\n})(Tooltip);"]},"metadata":{},"sourceType":"module"}