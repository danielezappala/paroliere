{"ast":null,"code":"var _jsxFileName = \"/Users/daniele/Documents/GitHub/paroliere/src/App.js\";\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport './App.css';\nimport Board from './components/board';\nimport dice from './data';\nimport PrimarySearchAppBar from './components/myAppBar';\nimport { Paper, Button, ThemeProvider, Typography, InputBase } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport theme from './theme';\nimport Ui from './components/ui';\nimport Store from \"./store/store\";\nimport { Context } from \"./store/store\";\nimport reducer from \"./store/reducer\"; //import <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n\nconst initialGlobalState = {\n  isSettingsDialogOpen: false,\n  rowsNum: 5,\n  colsNum: 5,\n  rolls: [],\n  match: 0,\n  totalTime: 10,\n  countDown: 2\n};\nconst GlobalStateContext = React.createContext(initialGlobalState);\nconst DispatchStateContext = React.createContext(undefined);\n\nconst useGlobalState = () => [React.useContext(GlobalStateContext), React.useContext(DispatchStateContext)];\n/**\n * Global State provider & hooks\n */\n\n\nconst GlobalStateProvider = ({\n  children\n}) => {\n  const [globalState, globalDispatch] = React.useReducer(reducer, initialGlobalState);\n  return /*#__PURE__*/React.createElement(GlobalStateContext.Provider, {\n    value: globalState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DispatchStateContext.Provider, {\n    value: globalDispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, children));\n};\n\nconst App = React.memo(() => {\n  const [globalState, globalDispatch] = useGlobalState();\n  console.log('globalState', globalState);\n  const [appState, setAppState] = React.useState();\n\n  const changeRowsNum = value => {\n    setAppState({\n      rowsNum: appState.rowsNum + value,\n      colsNum: appState.colsNum + value\n    });\n    console.log('new rowsNum', appState.rowsNum);\n    console.log('new colsNum', appState.colsNum);\n  };\n\n  const decrementRows = () => {\n    console.log('decrement rows number');\n    changeRowsNum(-1);\n  };\n\n  return /*#__PURE__*/React.createElement(GlobalStateProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Ui, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  })));\n});\nexport default App;","map":{"version":3,"sources":["/Users/daniele/Documents/GitHub/paroliere/src/App.js"],"names":["React","useCallback","useContext","useEffect","useState","Board","dice","PrimarySearchAppBar","Paper","Button","ThemeProvider","Typography","InputBase","withStyles","theme","Ui","Store","Context","reducer","initialGlobalState","isSettingsDialogOpen","rowsNum","colsNum","rolls","match","totalTime","countDown","GlobalStateContext","createContext","DispatchStateContext","undefined","useGlobalState","GlobalStateProvider","children","globalState","globalDispatch","useReducer","App","memo","console","log","appState","setAppState","changeRowsNum","value","decrementRows"],"mappings":"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","sourcesContent":["import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport './App.css';\nimport Board from './components/board'\nimport dice from './data'\nimport PrimarySearchAppBar from './components/myAppBar'\nimport { Paper, Button, ThemeProvider, Typography, InputBase } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles';\nimport theme from './theme';\nimport Ui from './components/ui'\nimport Store from \"./store/store\";\nimport {Context} from \"./store/store\"\nimport reducer from \"./store/reducer\"\n \n//import <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n\nconst initialGlobalState = {\n  isSettingsDialogOpen: false,\n  rowsNum: 5,\n  colsNum: 5,\n  rolls:[],\n  match: 0,\n  totalTime: 10,\n  countDown: 2\n};\n\n const GlobalStateContext = React.createContext(initialGlobalState);\n const DispatchStateContext = React.createContext(undefined);\n\n const useGlobalState = () => [\n  React.useContext(GlobalStateContext),\n  React.useContext(DispatchStateContext)\n];\n\n/**\n * Global State provider & hooks\n */\nconst GlobalStateProvider = ({ children }) => {\n  const [globalState, globalDispatch] = React.useReducer(\n    reducer,\n    initialGlobalState\n  );\n  \n  return (\n    <GlobalStateContext.Provider value={globalState}>\n      <DispatchStateContext.Provider value={globalDispatch}>\n        {children}\n      </DispatchStateContext.Provider>\n    </GlobalStateContext.Provider>\n  );\n};\n\nconst App = React.memo(() => {\n\n  \n  \n  const [globalState, globalDispatch] = useGlobalState();\n  console.log('globalState',globalState)\n  \n\n  const [appState, setAppState] = React.useState()\n\n \n  const changeRowsNum = (value) => {\n    setAppState({\n      rowsNum: appState.rowsNum + value,\n      colsNum: appState.colsNum + value,\n    })\n    console.log('new rowsNum', appState.rowsNum)\n    console.log('new colsNum', appState.colsNum)\n  }\n\n  const decrementRows = () => {\n    console.log('decrement rows number')\n    changeRowsNum(-1);\n  }\n\n\n    return (\n      <GlobalStateProvider>\n        <ThemeProvider theme={theme}>\n          <Ui/>\n        </ThemeProvider>\n      </GlobalStateProvider>\n    )\n  })\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}