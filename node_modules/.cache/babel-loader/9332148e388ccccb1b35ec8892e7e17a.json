{"ast":null,"code":"var _jsxFileName = \"/Users/daniele/Documents/GitHub/paroliere/src/components/timer.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Button, Typography, Box } from '@material-ui/core';\nimport useSound from 'use-sound';\nimport boopSfx from '../sounds/chinese-gong.mp3';\n\nconst Timer = () => {\n  const [seconds, setSeconds] = useState(60);\n  const [isActive, setIsActive] = useState(false);\n\n  function toggle() {\n    setIsActive(!isActive);\n  }\n\n  function reset() {\n    setSeconds(60);\n    setIsActive(false);\n  }\n\n  const [play] = useSound(boopSfx);\n  useEffect(() => {\n    let interval = null;\n\n    if (isActive) {\n      interval = setInterval(() => {\n        setSeconds(seconds => seconds - 1);\n      }, 1000);\n    } else if (!isActive && seconds !== 0) {\n      clearInterval(interval);\n    }\n\n    if (seconds === 0) {\n      play();\n    }\n\n    return () => clearInterval(interval);\n  }, [isActive, seconds]);\n  return /*#__PURE__*/React.createElement(Box, {\n    padding: \"0px 5px\",\n    display: \"flexbox\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    className: `${isActive ? 'active' : 'inactive'}`,\n    onClick: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, isActive ? 'Pause' : 'Play'), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    onClick: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Reset\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, seconds, \"s\"));\n};\n\nexport default Timer;","map":{"version":3,"sources":["/Users/daniele/Documents/GitHub/paroliere/src/components/timer.js"],"names":["React","useState","useEffect","Button","Typography","Box","useSound","boopSfx","Timer","seconds","setSeconds","isActive","setIsActive","toggle","reset","play","interval","setInterval","clearInterval"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,MAAR,EAAgBC,UAAhB,EAA4BC,GAA5B,QAAsC,mBAAtC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,OAAP,MAAqB,4BAArB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,KAAD,CAAxC;;AAEA,WAASY,MAAT,GAAkB;AAChBD,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD;;AAED,WAASG,KAAT,GAAiB;AACfJ,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD;;AAED,QAAM,CAACG,IAAD,IAAST,QAAQ,CAACC,OAAD,CAAvB;AAGAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,QAAQ,GAAG,IAAf;;AACA,QAAIL,QAAJ,EAAc;AACZK,MAAAA,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC3BP,QAAAA,UAAU,CAACD,OAAO,IAAIA,OAAO,GAAG,CAAtB,CAAV;AACD,OAFqB,EAEnB,IAFmB,CAAtB;AAGD,KAJD,MAIO,IAAI,CAACE,QAAD,IAAaF,OAAO,KAAK,CAA7B,EAAgC;AACrCS,MAAAA,aAAa,CAACF,QAAD,CAAb;AACD;;AACD,QAAIP,OAAO,KAAK,CAAhB,EAAmB;AAACM,MAAAA,IAAI;AAAG;;AAC3B,WAAO,MAAMG,aAAa,CAACF,QAAD,CAA1B;AACD,GAXQ,EAWN,CAACL,QAAD,EAAWF,OAAX,CAXM,CAAT;AAaA,sBACE,oBAAC,GAAD;AACI,IAAA,OAAO,EAAC,SADZ;AAEI,IAAA,OAAO,EAAC,SAFZ;AAGI,IAAA,UAAU,EAAC,QAHf;AAII,IAAA,cAAc,EAAC,eAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,WAAlC;AAA8C,IAAA,SAAS,EAAG,GAAEE,QAAQ,GAAG,QAAH,GAAc,UAAW,EAA7F;AAAgG,IAAA,OAAO,EAAEE,MAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QAAQ,GAAG,OAAH,GAAa,MADxB,CANJ,eASI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,WAAlC;AAA+C,IAAA,OAAO,EAAEG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATJ,eAYI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCL,OADD,MAZJ,CADF;AAkBD,CA/CD;;AAiDA,eAAeD,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {Button, Typography, Box} from '@material-ui/core'\nimport useSound from 'use-sound';\nimport boopSfx from  '../sounds/chinese-gong.mp3'\n\nconst Timer = () => {\n  const [seconds, setSeconds] = useState(60);\n  const [isActive, setIsActive] = useState(false);\n\n  function toggle() {\n    setIsActive(!isActive);\n  }\n\n  function reset() {\n    setSeconds(60);\n    setIsActive(false);\n  }\n\n  const [play] = useSound(boopSfx);\n\n\n  useEffect(() => {\n    let interval = null;\n    if (isActive) {\n      interval = setInterval(() => {\n        setSeconds(seconds => seconds - 1);\n      }, 1000);\n    } else if (!isActive && seconds !== 0) {\n      clearInterval(interval);\n    }\n    if (seconds === 0) {play()}\n    return () => clearInterval(interval);\n  }, [isActive, seconds]);\n\n  return (\n    <Box \n        padding=\"0px 5px\"\n        display=\"flexbox\" \n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n      >     \n        <Button variant='contained' color=\"secondary\" className={`${isActive ? 'active' : 'inactive'}`} onClick={toggle}>\n          {isActive ? 'Pause' : 'Play'}\n        </Button>\n        <Button variant='contained' color=\"secondary\"  onClick={reset}>\n          Reset\n        </Button>\n        <Typography variant='h4'>\n        {seconds}s\n        </Typography>\n    </Box>\n  );\n};\n\nexport default Timer;\n"]},"metadata":{},"sourceType":"module"}