{"ast":null,"code":"var _jsxFileName = \"/Users/daniele/Documents/GitHub/paroliere/src/components/board.js\";\nimport React from 'react';\nimport Row from './row';\nimport 'fontsource-roboto';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  board: {\n    width: '350px',\n    margin: '30px 0px',\n    border: '5px',\n    display: 'flex',\n    alignItems: \"center\",\n    justifyContent: \"center\" //color: theme.palette.openTitle,\n\n  }\n}));\n\nfunction Board({\n  rolls,\n  rowsNum,\n  colsNum\n}) {\n  const classes = useStyles();\n  console.log(`printing board with ${rolls.length} rolls in ${colsNum} columns`);\n  console.log('rolls length', rolls.length);\n  console.log('columns', colsNum);\n  let rows = [];\n  let rowRolls = [];\n  let rowCounter = 0;\n  const matrixDimension = rowsNum * colsNum;\n  rolls = rolls.filter((el, x) => {\n    if (x < matrixDimension) {\n      return el;\n    }\n  }); //console.log('reduct rolls',rolls)\n\n  for (let [index, value] of rolls.entries()) {\n    //console.log(rowCounter, index+1, value)\n    rowRolls.push({\n      i: index + 1,\n      x: rowCounter + 1,\n      y: index + 1 + colsNum - colsNum * (rowCounter + 1),\n      content: value\n    });\n\n    if (rowRolls.length === colsNum) {\n      //console.log(`pushing rowRolls row_${rowCounter} into the board `,rowRolls)\n      rows.push( /*#__PURE__*/React.createElement(\"tr\", {\n        key: rowCounter.toString(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        key: rowCounter.toString(),\n        id: rowCounter + 1,\n        rowRolls: rowRolls,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 59\n        }\n      })));\n      rowRolls = [];\n      rowCounter++;\n    }\n  } //console.log('printing rows',rows)\n\n\n  return /*#__PURE__*/React.createElement(\"table\", {\n    className: classes.board,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, rows));\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/daniele/Documents/GitHub/paroliere/src/components/board.js"],"names":["React","Row","makeStyles","useStyles","theme","board","width","margin","border","display","alignItems","justifyContent","Board","rolls","rowsNum","colsNum","classes","console","log","length","rows","rowRolls","rowCounter","matrixDimension","filter","el","x","index","value","entries","push","i","y","content","toString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,mBAAP;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAACE,KAAK,KAAI;AAClCC,EAAAA,KAAK,EAAC;AACFC,IAAAA,KAAK,EAAE,OADL;AAEFC,IAAAA,MAAM,EAAE,UAFN;AAGFC,IAAAA,MAAM,EAAE,KAHN;AAIFC,IAAAA,OAAO,EAAE,MAJP;AAKFC,IAAAA,UAAU,EAAE,QALV;AAMFC,IAAAA,cAAc,EAAE,QANd,CAOF;;AAPE;AAD4B,CAAJ,CAAN,CAA5B;;AAYA,SAASC,KAAT,CAAe;AAAEC,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBC,EAAAA;AAAlB,CAAf,EAA4C;AAExC,QAAMC,OAAO,GAAGb,SAAS,EAAzB;AAEAc,EAAAA,OAAO,CAACC,GAAR,CAAa,uBAAsBL,KAAK,CAACM,MAAO,aAAYJ,OAAQ,UAApE;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BL,KAAK,CAACM,MAAlC;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBH,OAAtB;AAEA,MAAIK,IAAI,GAAG,EAAX;AACA,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,UAAU,GAAG,CAAjB;AACA,QAAMC,eAAe,GAAGT,OAAO,GAACC,OAAhC;AACAF,EAAAA,KAAK,GAAGA,KAAK,CAACW,MAAN,CAAa,CAACC,EAAD,EAAIC,CAAJ,KAAQ;AACzB,QAAIA,CAAC,GAACH,eAAN,EAAsB;AAClB,aAAOE,EAAP;AACH;AACJ,GAJO,CAAR,CAZwC,CAiBxC;;AACA,OAAK,IAAI,CAACE,KAAD,EAAOC,KAAP,CAAT,IAA0Bf,KAAK,CAACgB,OAAN,EAA1B,EAA2C;AACvC;AACIR,IAAAA,QAAQ,CAACS,IAAT,CAAc;AACVC,MAAAA,CAAC,EAACJ,KAAK,GAAC,CADE;AAEVD,MAAAA,CAAC,EAACJ,UAAU,GAAC,CAFH;AAGVU,MAAAA,CAAC,EAAEL,KAAK,GAAC,CAAN,GAAQZ,OAAT,GAAmBA,OAAO,IAAEO,UAAU,GAAC,CAAb,CAHlB;AAIVW,MAAAA,OAAO,EAAEL;AAJC,KAAd;;AAOC,QAAGP,QAAQ,CAACF,MAAT,KAAoBJ,OAAvB,EACD;AACI;AACAK,MAAAA,IAAI,CAACU,IAAL,eAAU;AAAI,QAAA,GAAG,EAAER,UAAU,CAACY,QAAX,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgC,oBAAC,GAAD;AAAK,QAAA,GAAG,EAAEZ,UAAU,CAACY,QAAX,EAAV;AAAiC,QAAA,EAAE,EAAEZ,UAAU,GAAC,CAAhD;AAAmD,QAAA,QAAQ,EAAED,QAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhC,CAAV;AACAA,MAAAA,QAAQ,GAAG,EAAX;AACAC,MAAAA,UAAU;AACb;AAEJ,GAnCmC,CAoCpC;;;AACA,sBAEI;AAAO,IAAA,SAAS,EAAEN,OAAO,CAACX,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKe,IADL,CADR,CAFJ;AASP;;AACD,eAAeR,KAAf","sourcesContent":["import React from 'react';\nimport Row from './row'\nimport 'fontsource-roboto';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme =>({\n    board:{\n        width: '350px',\n        margin: '30px 0px',\n        border: '5px',\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: \"center\"\n        //color: theme.palette.openTitle,\n    }\n}))\n\nfunction Board({ rolls, rowsNum, colsNum }) {\n\n    const classes = useStyles()\n\n    console.log(`printing board with ${rolls.length} rolls in ${colsNum} columns`)\n    console.log('rolls length', rolls.length)\n    console.log('columns',colsNum)\n\n    let rows = []\n    let rowRolls = []\n    let rowCounter = 0\n    const matrixDimension = rowsNum*colsNum\n    rolls = rolls.filter((el,x)=>{\n        if (x<matrixDimension){\n            return el\n        }\n    })\n    //console.log('reduct rolls',rolls)\n    for (let [index,value] of rolls.entries()) {\n        //console.log(rowCounter, index+1, value)\n            rowRolls.push({\n                i:index+1,\n                x:rowCounter+1,\n                y:(index+1+colsNum)-(colsNum*(rowCounter+1)),\n                content: value\n            })\n\n             if(rowRolls.length === colsNum) \n            {   \n                //console.log(`pushing rowRolls row_${rowCounter} into the board `,rowRolls)\n                rows.push(<tr key={rowCounter.toString()}><Row key={rowCounter.toString()} id={rowCounter+1} rowRolls={rowRolls}/></tr>)\n                rowRolls = []\n                rowCounter++\n            } \n           \n        }\n        //console.log('printing rows',rows)\n        return (\n            \n            <table className={classes.board}>\n                    <tbody> \n                        {rows} \n                    </tbody>\n                </table>\n        )\n        \n}\nexport default Board"]},"metadata":{},"sourceType":"module"}