{"ast":null,"code":"var _jsxFileName = \"/Users/daniele/Documents/GitHub/paroliere/src/components/fullScreenDialog.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport GlobalState from \"../store/globalState\";\nimport Slider from '@material-ui/core/Slider';\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative'\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  }\n}));\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }\n  }));\n});\nexport default function FullScreenDialog() {\n  const classes = useStyles();\n  const {\n    globalState,\n    globalDispatch\n  } = useContext(GlobalState);\n  useEffect(() => {}, []);\n\n  const valuetext = value => {\n    return `${value}`;\n  };\n\n  const changeRowsNum = (e, value) => {\n    if (value * globalState.colsNum > 25) {\n      alert('It is not possible set more than 25 dices');\n      return;\n    }\n\n    globalDispatch({\n      type: \"CHANGE_ROWSNUM\",\n      payload: value\n    });\n  };\n\n  const changeColsNum = (e, value) => {\n    if (value * globalState.rowsNum > 25) {\n      alert('It is not possible set more than 25 dices');\n      return;\n    }\n\n    globalDispatch({\n      type: \"CHANGE_COLSNUM\",\n      payload: value\n    });\n  };\n\n  const handleClose = (e, value) => {\n    globalDispatch({\n      type: \"CLOSE_SETTINGS\"\n    });\n  };\n\n  const saveChanges = (e, value) => {\n    alert('Changes is being saved');\n    globalDispatch({\n      type: \"CLOSE_SETTINGS\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, \"Open full-screen dialog\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: globalState.isSettingsDialogOpen,\n    onClose: handleClose,\n    TransitionComponent: Transition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    className: classes.appBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    onClick: handleClose,\n    \"aria-label\": \"close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Settings\"), /*#__PURE__*/React.createElement(Button, {\n    key: \"saveSettings\",\n    autoFocus: true,\n    color: \"inherit\",\n    disabled: \"true\",\n    onClick: saveChanges,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Save\"))), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    key: '1',\n    button: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Number of rows: \",\n    secondary: globalState.rowsNum,\n    onClick: () => globalDispatch({\n      type: \"DEC_ROWSNUM\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Slider, {\n    key: \"slideRowsNum\",\n    defaultValue: globalState.rowsNum,\n    getAriaValueText: valuetext,\n    onChange: changeRowsNum,\n    \"aria-labelledby\": \"discrete-slider-small-steps\",\n    step: 1,\n    marks: true,\n    min: globalState.minRows,\n    max: globalState.maxRows,\n    valueLabelDisplay: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ListItem, {\n    key: '2',\n    button: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: \"Number of columns: \",\n    secondary: globalState.colsNum,\n    onClick: () => globalDispatch({\n      type: \"DEC_COLSNUM\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Slider, {\n    key: \"slideColsNum\",\n    defaultValue: globalState.rowsNum,\n    getAriaValueText: valuetext,\n    onChange: changeColsNum,\n    \"aria-labelledby\": \"discrete-slider-small-steps\",\n    step: 1,\n    marks: true,\n    min: globalState.minCols,\n    max: globalState.maxCols,\n    valueLabelDisplay: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/daniele/Documents/GitHub/paroliere/src/components/fullScreenDialog.js"],"names":["React","useEffect","useState","useContext","makeStyles","Button","Dialog","ListItemText","ListItem","List","Divider","AppBar","Toolbar","IconButton","Typography","CloseIcon","Slide","GlobalState","Slider","useStyles","theme","appBar","position","title","marginLeft","spacing","flex","Transition","forwardRef","props","ref","FullScreenDialog","classes","globalState","globalDispatch","valuetext","value","changeRowsNum","e","colsNum","alert","type","payload","changeColsNum","rowsNum","handleClose","saveChanges","isSettingsDialogOpen","minRows","maxRows","minCols","maxCols"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,MAAMC,SAAS,GAAGf,UAAU,CAAEgB,KAAD,KAAY;AACvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE;AADJ,GAD+B;AAIvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,UAAU,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADP;AAELC,IAAAA,IAAI,EAAE;AAFD;AAJgC,CAAZ,CAAD,CAA5B;AAUA,MAAMC,UAAU,GAAG3B,KAAK,CAAC4B,UAAN,CAAiB,SAASD,UAAT,CAAoBE,KAApB,EAA2BC,GAA3B,EAAgC;AAClE,sBAAO,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,IAAjB;AAAsB,IAAA,GAAG,EAAEA;AAA3B,KAAoCD,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAFkB,CAAnB;AAIA,eAAe,SAASE,gBAAT,GAA4B;AAEzC,QAAMC,OAAO,GAAGb,SAAS,EAAzB;AAEA,QAAM;AAACc,IAAAA,WAAD;AAAcC,IAAAA;AAAd,MAAgC/B,UAAU,CAACc,WAAD,CAAhD;AAIAhB,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEP,EAFO,CAAT;;AAIA,QAAMkC,SAAS,GAAGC,KAAD,IAAW;AAC1B,WAAQ,GAAEA,KAAM,EAAhB;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAG,CAACC,CAAD,EAAGF,KAAH,KAAa;AACjC,QAAGA,KAAK,GAAGH,WAAW,CAACM,OAApB,GAA8B,EAAjC,EAAoC;AAClCC,MAAAA,KAAK,CAAC,2CAAD,CAAL;AACA;AACD;;AAEDN,IAAAA,cAAc,CAAC;AACbO,MAAAA,IAAI,EAAE,gBADO;AAEbC,MAAAA,OAAO,EAAEN;AAFI,KAAD,CAAd;AAKD,GAXD;;AAYA,QAAMO,aAAa,GAAG,CAACL,CAAD,EAAGF,KAAH,KAAa;AACjC,QAAGA,KAAK,GAAGH,WAAW,CAACW,OAApB,GAA8B,EAAjC,EAAoC;AAClCJ,MAAAA,KAAK,CAAC,2CAAD,CAAL;AACA;AACD;;AAEDN,IAAAA,cAAc,CAAC;AACbO,MAAAA,IAAI,EAAE,gBADO;AAEbC,MAAAA,OAAO,EAAEN;AAFI,KAAD,CAAd;AAKD,GAXD;;AAaA,QAAMS,WAAW,GAAG,CAACP,CAAD,EAAGF,KAAH,KAAa;AAC/BF,IAAAA,cAAc,CAAC;AAAEO,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAd;AACD,GAFD;;AAIA,QAAMK,WAAW,GAAG,CAACR,CAAD,EAAGF,KAAH,KAAa;AAC/BI,IAAAA,KAAK,CAAC,wBAAD,CAAL;AACAN,IAAAA,cAAc,CAAC;AAAEO,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAd;AACD,GAHD;;AAKA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAC,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,eAIE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAER,WAAW,CAACc,oBAA1B;AAAgD,IAAA,OAAO,EAAEF,WAAzD;AAAsE,IAAA,mBAAmB,EAAElB,UAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEK,OAAO,CAACX,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,OAAjB;AAAyB,IAAA,KAAK,EAAC,SAA/B;AAAyC,IAAA,OAAO,EAAEwB,WAAlD;AAA+D,kBAAW,OAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAEb,OAAO,CAACT,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAC,cAAZ;AAA2B,IAAA,SAAS,MAApC;AAAqC,IAAA,KAAK,EAAC,SAA3C;AAAqD,IAAA,QAAQ,EAAC,MAA9D;AAAqE,IAAA,OAAO,EAAEuB,WAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,CADF,CADF,eAeE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAE,GAAf;AAAoB,IAAA,MAAM,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAC,kBAAtB;AAAyC,IAAA,SAAS,EAAGb,WAAW,CAACW,OAAjE;AAA0E,IAAA,OAAO,EAAE,MAAMV,cAAc,CAAC;AAAEO,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE,oBAAC,MAAD;AACE,IAAA,GAAG,EAAC,cADN;AAEE,IAAA,YAAY,EAAER,WAAW,CAACW,OAF5B;AAGE,IAAA,gBAAgB,EAAET,SAHpB;AAIE,IAAA,QAAQ,EAAEE,aAJZ;AAKE,uBAAgB,6BALlB;AAME,IAAA,IAAI,EAAE,CANR;AAOE,IAAA,KAAK,MAPP;AAQE,IAAA,GAAG,EAAEJ,WAAW,CAACe,OARnB;AASE,IAAA,GAAG,EAAEf,WAAW,CAACgB,OATnB;AAUE,IAAA,iBAAiB,EAAC,MAVpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAHF,eAoBE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,eAqBE,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAE,GAAf;AAAoB,IAAA,MAAM,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAC,qBAAtB;AAA4C,IAAA,SAAS,EAAEhB,WAAW,CAACM,OAAnE;AAA4E,IAAA,OAAO,EAAE,MAAML,cAAc,CAAC;AAAEO,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AACE,IAAA,GAAG,EAAC,cADN;AAEE,IAAA,YAAY,EAAER,WAAW,CAACW,OAF5B;AAGE,IAAA,gBAAgB,EAAET,SAHpB;AAIE,IAAA,QAAQ,EAAEQ,aAJZ;AAKE,uBAAgB,6BALlB;AAME,IAAA,IAAI,EAAE,CANR;AAOE,IAAA,KAAK,MAPP;AAQE,IAAA,GAAG,EAAEV,WAAW,CAACiB,OARnB;AASE,IAAA,GAAG,EAAEjB,WAAW,CAACkB,OATnB;AAUE,IAAA,iBAAiB,EAAC,MAVpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CArBF,eAoCE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApCF,CAfF,CAJF,CADF;AA6DD","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nimport GlobalState from \"../store/globalState\"\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog() {\n\n  const classes = useStyles();\n\n  const {globalState, globalDispatch} = useContext(GlobalState);\n\n  \n\n  useEffect(() => {\n\n  },[]);\n\n  const valuetext= (value) => {\n    return `${value}`;\n  }\n\n  const changeRowsNum = (e,value) => {\n    if(value * globalState.colsNum > 25){\n      alert('It is not possible set more than 25 dices')\n      return\n    }\n    \n    globalDispatch({ \n      type: \"CHANGE_ROWSNUM\",\n      payload: value\n    })\n    \n  }\n  const changeColsNum = (e,value) => {\n    if(value * globalState.rowsNum > 25){\n      alert('It is not possible set more than 25 dices')\n      return \n    }\n    \n    globalDispatch({ \n      type: \"CHANGE_COLSNUM\",\n      payload: value\n    })\n    \n  }\n\n  const handleClose = (e,value) => {\n    globalDispatch({ type: \"CLOSE_SETTINGS\" })\n  };\n\n  const saveChanges = (e,value) => {\n    alert('Changes is being saved')\n    globalDispatch({ type: \"CLOSE_SETTINGS\" })\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\">\n        Open full-screen dialog\n      </Button>\n      <Dialog open={globalState.isSettingsDialogOpen} onClose={handleClose} TransitionComponent={Transition}>\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Settings\n            </Typography>\n            <Button key=\"saveSettings\" autoFocus color=\"inherit\" disabled=\"true\" onClick={saveChanges}>\n              Save\n            </Button>\n          </Toolbar>\n        </AppBar>\n        \n        <List>\n          {/*Object.keys(globalState).map(function(key)*/}\n\n          <ListItem key={'1'} button>\n            <ListItemText primary='Number of rows: ' secondary= {globalState.rowsNum} onClick={() => globalDispatch({ type: \"DEC_ROWSNUM\" })} />\n           \n            <Slider\n              key=\"slideRowsNum\"\n              defaultValue={globalState.rowsNum}\n              getAriaValueText={valuetext}\n              onChange={changeRowsNum}\n              aria-labelledby=\"discrete-slider-small-steps\"\n              step={1}\n              marks\n              min={globalState.minRows}\n              max={globalState.maxRows}\n              valueLabelDisplay=\"auto\"\n            />\n\n          </ListItem>\n          <Divider />\n          <ListItem key={'2'} button>\n            <ListItemText primary='Number of columns: ' secondary={globalState.colsNum} onClick={() => globalDispatch({ type: \"DEC_COLSNUM\" })} />\n            <Slider\n              key=\"slideColsNum\"\n              defaultValue={globalState.rowsNum}\n              getAriaValueText={valuetext}\n              onChange={changeColsNum}\n              aria-labelledby=\"discrete-slider-small-steps\"\n              step={1}\n              marks\n              min={globalState.minCols}\n              max={globalState.maxCols}\n              valueLabelDisplay=\"auto\"\n            />\n          </ListItem>\n          <Divider />\n        </List>\n      </Dialog>\n    </div >\n  )\n}\n"]},"metadata":{},"sourceType":"module"}