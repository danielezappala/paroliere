{"ast":null,"code":"var _jsxFileName = \"/Users/daniele/Documents/GitHub/paroliere/src/App.js\";\nimport React, { Component, Fragment } from 'react';\nimport './App.css';\nimport Board from './components/board';\nimport Die from './components/die';\nimport dice from './data'; //import <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dice: dice,\n      rolls: [],\n      rowsNum: 5,\n      colsNum: 5\n    };\n    this.handleEvent = this.handleEvent.bind(this);\n  }\n\n  handleEvent(event, id) {\n    event.stopPropagation();\n\n    switch (event.type) {\n      case 'click':\n        console.log('clicked ', event.target, id);\n        this.rollsDice();\n        break;\n\n      default:\n        console.log('unhandled ', event.type);\n    }\n  }\n\n  rollsDice() {\n    //clona l'array dice in rolls \n    let rolls = [];\n    rolls = dice.map(die => {\n      const roll = Math.floor(Math.random() * 6);\n      console.log('roll', roll);\n      return [die[roll]];\n    });\n    this.setState({\n      'rolls': rolls\n    });\n    console.log('rolls ', this.state.rolls);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      key: \"1\",\n      onClick: (e, key) => this.handleEvent(e, key),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, \"Roll dice\"), /*#__PURE__*/React.createElement(Board, {\n      rolls: this.state.rolls,\n      rowsNum: this.state.rowsNum,\n      colsNum: this.state.colsNum,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/daniele/Documents/GitHub/paroliere/src/App.js"],"names":["React","Component","Fragment","Board","Die","dice","App","constructor","props","state","rolls","rowsNum","colsNum","handleEvent","bind","event","id","stopPropagation","type","console","log","target","rollsDice","map","die","roll","Math","floor","random","setState","render","e","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CAEA;;AAGA,MAAMC,GAAN,SAAkBL,SAAlB,CAA2B;AAEzBM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTJ,MAAAA,IAAI,EAAEA,IADG;AAETK,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,OAAO,EAAE,CAHA;AAITC,MAAAA,OAAO,EAAE;AAJA,KAAb;AAMA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH;;AAEDD,EAAAA,WAAW,CAACE,KAAD,EAAQC,EAAR,EAAY;AACrBD,IAAAA,KAAK,CAACE,eAAN;;AACA,YAAQF,KAAK,CAACG,IAAd;AACI,WAAK,OAAL;AACIC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBL,KAAK,CAACM,MAA9B,EAAsCL,EAAtC;AACA,aAAKM,SAAL;AACA;;AACJ;AACIH,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BL,KAAK,CAACG,IAAhC;AANR;AAQD;;AAEDI,EAAAA,SAAS,GAAG;AACV;AACA,QAAIZ,KAAK,GAAG,EAAZ;AACAA,IAAAA,KAAK,GAAGL,IAAI,CAACkB,GAAL,CAASC,GAAG,IAAI;AACpB,YAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAgB,CAA5B,CAAb;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBK,IAApB;AACA,aAAO,CAACD,GAAG,CAACC,IAAD,CAAJ,CAAP;AACH,KAJO,CAAR;AAKA,SAAKI,QAAL,CAAc;AAAC,eAAQnB;AAAT,KAAd;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKX,KAAL,CAAWC,KAAjC;AACD;;AAECoB,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,GAAG,EAAC,GAAZ;AAAgB,MAAA,OAAO,EAAE,CAACC,CAAD,EAAIC,GAAJ,KAAY,KAAKnB,WAAL,CAAiBkB,CAAjB,EAAoBC,GAApB,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAII,oBAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWC,KADpB;AAEE,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWE,OAFtB;AAGE,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,OAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADF,CADF;AAgBD;;AAtDwB;;AAyD3B,eAAeN,GAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport './App.css';\nimport Board from './components/board'\nimport Die from './components/die'\nimport dice from './data'\n\n//import <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n\n\nclass App extends Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        dice: dice,\n        rolls: [],\n        rowsNum: 5,\n        colsNum: 5\n    }\n    this.handleEvent = this.handleEvent.bind(this);\n}\n\nhandleEvent(event, id) {\n  event.stopPropagation();\n  switch (event.type) {\n      case 'click':\n          console.log('clicked ', event.target, id);\n          this.rollsDice()\n          break\n      default:\n          console.log('unhandled ', event.type)\n  }\n}\n\nrollsDice() { \n  //clona l'array dice in rolls \n  let rolls = []\n  rolls = dice.map(die => {\n      const roll = Math.floor( Math.random() * 6 )\n      console.log('roll', roll)\n      return [die[roll]]\n  })\n  this.setState({'rolls':rolls})\n  console.log('rolls ', this.state.rolls)\n}\n\n  render() {\n    return (\n      <Fragment>\n        <div>\n            <button key='1' onClick={(e, key) => this.handleEvent(e, key)}>\n                    Roll dice\n            </button>\n            <Board \n              rolls={this.state.rolls} \n              rowsNum={this.state.rowsNum} \n              colsNum={this.state.colsNum}\n            />\n                \n            </div>\n        \n      </Fragment>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}