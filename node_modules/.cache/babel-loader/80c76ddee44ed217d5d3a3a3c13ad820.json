{"ast":null,"code":"var _jsxFileName = \"/Users/daniele/Documents/GitHub/paroliere/src/components/row.js\";\nimport React, { Fragment } from 'react';\nimport Die from './die';\n\nfunction Row({\n  id,\n  rowRolls\n}) {\n  console.log(`printing rowRolls ${id} ${rowRolls} `);\n  let diceInRow = [];\n  let diceId = 0;\n\n  for (let [index, value] of rowRolls.entries()) {\n    //console.log(`sending die index ${index+1} letter ${value}` )\n    dieId = `die_${index + 1}`;\n    diceInRow.push( /*#__PURE__*/React.createElement(Die, {\n      key: id.toString(),\n      id: dieId.toString(),\n      roll: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 24\n      }\n    }));\n  }\n\n  console.log(`diceInRow ${id}`, diceInRow);\n  return [diceInRow];\n}\n\nexport default Row;","map":{"version":3,"sources":["/Users/daniele/Documents/GitHub/paroliere/src/components/row.js"],"names":["React","Fragment","Die","Row","id","rowRolls","console","log","diceInRow","diceId","index","value","entries","dieId","push","toString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAGA,SAASC,GAAT,CAAa;AAACC,EAAAA,EAAD;AAAIC,EAAAA;AAAJ,CAAb,EAA4B;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAa,qBAAoBH,EAAG,IAAGC,QAAS,GAAhD;AAEA,MAAIG,SAAS,GAAG,EAAhB;AACA,MAAIC,MAAM,GAAG,CAAb;;AACA,OAAK,IAAI,CAACC,KAAD,EAAQC,KAAR,CAAT,IAA2BN,QAAQ,CAACO,OAAT,EAA3B,EAA+C;AAC3C;AACAC,IAAAA,KAAK,GAAE,OAAMH,KAAK,GAAC,CAAE,EAArB;AACAF,IAAAA,SAAS,CAACM,IAAV,eAAe,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAEV,EAAE,CAACW,QAAH,EAAV;AAAyB,MAAA,EAAE,EAAEF,KAAK,CAACE,QAAN,EAA7B;AAA+C,MAAA,IAAI,EAAEJ,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAf;AACH;;AAEDL,EAAAA,OAAO,CAACC,GAAR,CAAa,aAAYH,EAAG,EAA5B,EAA+BI,SAA/B;AAEA,SAAQ,CAACA,SAAD,CAAR;AACH;;AAED,eAAeL,GAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport Die from './die'\n\n\nfunction Row({id,rowRolls}) {\n    console.log(`printing rowRolls ${id} ${rowRolls} `)\n\n    let diceInRow = []\n    let diceId = 0\n    for (let [index, value] of rowRolls.entries()) {\n        //console.log(`sending die index ${index+1} letter ${value}` )\n        dieId=`die_${index+1}`\n        diceInRow.push(<Die key={id.toString()} id={dieId.toString()} roll={value}/>)\n    }\n\n    console.log(`diceInRow ${id}`, diceInRow)\n\n    return( [diceInRow] )\n}\n\nexport default Row"]},"metadata":{},"sourceType":"module"}