{"ast":null,"code":"import { useReducer } from \"react\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"OPEN_SETTINGS\":\n      return {\n        isSettingsDialogOpen: true\n      };\n\n    case \"CLOSE_SETTINGS\":\n      return {\n        isSettingsDialogOpen: false\n      };\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nconst useGlobalState = () => {\n  const [globalState, globalDispatch] = useReducer(reducer, {\n    isSettingsDialogOpen: false,\n    rowsNum: 5,\n    colsNum: 5,\n    match: 0,\n    totalTime: 10,\n    countDown: 2\n  });\n  return {\n    globalState,\n    globalDispatch\n  };\n};\n\nexport default useGlobalState;","map":{"version":3,"sources":["/Users/daniele/Documents/GitHub/paroliere/src/store/useGlobalState.js"],"names":["useReducer","reducer","state","action","type","isSettingsDialogOpen","useGlobalState","globalState","globalDispatch","rowsNum","colsNum","match","totalTime","countDown"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAkB;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,eAAL;AACI,aAAO;AACHC,QAAAA,oBAAoB,EAAE;AADnB,OAAP;;AAGA,SAAK,gBAAL;AACI,aAAO;AACHA,QAAAA,oBAAoB,EAAE;AADnB,OAAP;;AAGJ;AACI;AACI,eAAOH,KAAP;AACH;AAZb;AAeH,CAhBD;;AAkBA,MAAMI,cAAc,GAAG,MAAM;AACzB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,UAAU,CAACC,OAAD,EAAU;AACtDI,IAAAA,oBAAoB,EAAE,KADgC;AAEtDI,IAAAA,OAAO,EAAE,CAF6C;AAGtDC,IAAAA,OAAO,EAAE,CAH6C;AAItDC,IAAAA,KAAK,EAAE,CAJ+C;AAKtDC,IAAAA,SAAS,EAAE,EAL2C;AAMtDC,IAAAA,SAAS,EAAE;AAN2C,GAAV,CAAhD;AASA,SAAO;AAACN,IAAAA,WAAD;AAAcC,IAAAA;AAAd,GAAP;AACH,CAXD;;AAaA,eAAeF,cAAf","sourcesContent":["import { useReducer } from \"react\"\n\nconst reducer = (state,action) => {\n    switch (action.type){\n        case \"OPEN_SETTINGS\":\n            return {\n                isSettingsDialogOpen: true\n            }\n            case \"CLOSE_SETTINGS\":\n                return {\n                    isSettingsDialogOpen: false\n                }\n            default:\n                {\n                    return state\n                }\n    }\n  \n}\n\nconst useGlobalState = () => {\n    const [globalState, globalDispatch] = useReducer(reducer, {\n        isSettingsDialogOpen: false,\n        rowsNum: 5,\n        colsNum: 5,\n        match: 0,\n        totalTime: 10,\n        countDown: 2\n    })\n\n    return {globalState, globalDispatch}\n}\n\nexport default useGlobalState"]},"metadata":{},"sourceType":"module"}