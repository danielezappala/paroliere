{"ast":null,"code":"import { useReducer } from \"react\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"OPEN_SETTINGS\":\n      return {\n        isSettingsDialogOpen: true\n      };\n\n    case \"CLOSE_SETTINGS\":\n      return {\n        isSettingsDialogOpen: false\n      };\n\n    case \"CHANGE_ROWSNUM\":\n      return {\n        rowsNum: 5\n      };\n\n    case \"CHANGE_COLSNUM\":\n      return {\n        rowsNum: 5\n      };\n\n    case \"INC_MATCH\":\n      return {\n        match: 1\n      };\n\n    case \"SET_TOTALTIME\":\n      return {\n        totalTime: 10\n      };\n\n    case \"INC_COUNTDOWN\":\n      return {\n        countDown: 1\n      };\n\n    case \"DEC_COUNTDOWN\":\n      return {\n        countDown: 1\n      };\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nconst useGlobalState = () => {\n  const [globalState, globalDispatch] = useReducer(reducer, {\n    isSettingsDialogOpen: false,\n    countDown: 2\n  });\n  return {\n    globalState,\n    globalDispatch\n  };\n};\n\nexport default useGlobalState;","map":{"version":3,"sources":["/Users/daniele/Documents/GitHub/paroliere/src/store/useGlobalState.js"],"names":["useReducer","reducer","state","action","type","isSettingsDialogOpen","rowsNum","match","totalTime","countDown","useGlobalState","globalState","globalDispatch"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,eAAL;AACI,aAAO;AACHC,QAAAA,oBAAoB,EAAE;AADnB,OAAP;;AAGJ,SAAK,gBAAL;AACI,aAAO;AACHA,QAAAA,oBAAoB,EAAE;AADnB,OAAP;;AAGJ,SAAK,gBAAL;AACI,aAAO;AACHC,QAAAA,OAAO,EAAE;AADN,OAAP;;AAGJ,SAAK,gBAAL;AACI,aAAO;AACHA,QAAAA,OAAO,EAAE;AADN,OAAP;;AAGJ,SAAK,WAAL;AACI,aAAO;AACHC,QAAAA,KAAK,EAAE;AADJ,OAAP;;AAGJ,SAAK,eAAL;AACI,aAAO;AACHC,QAAAA,SAAS,EAAE;AADR,OAAP;;AAGJ,SAAK,eAAL;AACI,aAAO;AACHC,QAAAA,SAAS,EAAE;AADR,OAAP;;AAGJ,SAAK,eAAL;AACI,aAAO;AACHA,QAAAA,SAAS,EAAE;AADR,OAAP;;AAGJ;AACI;AACI,eAAOP,KAAP;AACH;AApCT;AAuCH,CAxCD;;AA0CA,MAAMQ,cAAc,GAAG,MAAM;AACzB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,UAAU,CAACC,OAAD,EAAU;AACtDI,IAAAA,oBAAoB,EAAE,KADgC;AAEtDI,IAAAA,SAAS,EAAE;AAF2C,GAAV,CAAhD;AAIA,SAAO;AAAEE,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAAP;AACH,CAND;;AAQA,eAAeF,cAAf","sourcesContent":["import { useReducer } from \"react\"\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"OPEN_SETTINGS\":\n            return {\n                isSettingsDialogOpen: true\n            }\n        case \"CLOSE_SETTINGS\":\n            return {\n                isSettingsDialogOpen: false\n            }\n        case \"CHANGE_ROWSNUM\":\n            return {\n                rowsNum: 5\n            }\n        case \"CHANGE_COLSNUM\":\n            return {\n                rowsNum: 5\n            }\n        case \"INC_MATCH\":\n            return {\n                match: 1\n            }\n        case \"SET_TOTALTIME\":\n            return {\n                totalTime: 10\n            }\n        case \"INC_COUNTDOWN\":\n            return {\n                countDown: 1\n            }\n        case \"DEC_COUNTDOWN\":\n            return {\n                countDown: 1\n            }\n        default:\n            {\n                return state\n            }\n    }\n\n}\n\nconst useGlobalState = () => {\n    const [globalState, globalDispatch] = useReducer(reducer, {\n        isSettingsDialogOpen: false,\n        countDown: 2\n    })\n    return { globalState, globalDispatch }\n}\n\nexport default useGlobalState"]},"metadata":{},"sourceType":"module"}