{"ast":null,"code":"var _jsxFileName = \"/Users/daniele/Documents/GitHub/paroliere/src/components/board.js\";\nimport React, { Fragment, useContext } from 'react';\nimport Headers from './headers';\nimport Row from './row';\nimport { Typography, Card } from '@material-ui/core';\nimport 'fontsource-roboto';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Context } from \"../store/globalState\";\nconst useStyles = makeStyles(theme => ({\n  board: {\n    width: '350px',\n    margin: '30px 0px',\n    border: '5px',\n    display: 'flex',\n    alignItems: \"center\",\n    justifyContent: \"center\" //color: theme.palette.openTitle,\n\n  }\n}));\n\nfunction Board({\n  rolls,\n  matrix\n}) {\n  const classes = useStyles();\n  console.log(`printing board with ${rolls.length} rolls in ${colsNum} columns`);\n  console.log('rolls length', rolls.length);\n  console.log('columns', colsNum);\n  let rows = [];\n  let rowRolls = [];\n  let rowCounter = 0;\n  const matrixDimension = rowsNum * colsNum;\n  rolls = rolls.filter((el, x) => {\n    if (x < matrixDimension) {\n      return el;\n    }\n  });\n  console.log('reduct rolls', rolls);\n\n  for (let [index, value] of rolls.entries()) {\n    console.log(rowCounter, index + 1, value);\n    rowRolls.push({\n      i: index + 1,\n      x: rowCounter + 1,\n      y: index + 1 + colsNum - colsNum * (rowCounter + 1),\n      content: value\n    });\n\n    if (rowRolls.length === colsNum) {\n      console.log(`pushing rowRolls row_${rowCounter} into the board `, rowRolls);\n      rows.push( /*#__PURE__*/React.createElement(\"tr\", {\n        key: rowCounter.toString(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        key: rowCounter.toString(),\n        id: rowCounter + 1,\n        rowRolls: rowRolls,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 59\n        }\n      })));\n      rowRolls = [];\n      rowCounter++;\n    }\n  }\n\n  console.log('printing rows', rows);\n  return /*#__PURE__*/React.createElement(\"table\", {\n    className: classes.board,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, rows));\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/daniele/Documents/GitHub/paroliere/src/components/board.js"],"names":["React","Fragment","useContext","Headers","Row","Typography","Card","makeStyles","Context","useStyles","theme","board","width","margin","border","display","alignItems","justifyContent","Board","rolls","matrix","classes","console","log","length","colsNum","rows","rowRolls","rowCounter","matrixDimension","rowsNum","filter","el","x","index","value","entries","push","i","y","content","toString"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext } from 'react';\nimport Headers from './headers'\nimport Row from './row'\nimport {Typography, Card} from '@material-ui/core';\nimport 'fontsource-roboto';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Context } from \"../store/globalState\"\n\nconst useStyles = makeStyles(theme =>({\n    board:{\n        width: '350px',\n        margin: '30px 0px',\n        border: '5px',\n        display: 'flex',\n        alignItems: \"center\",\n        justifyContent: \"center\"\n\n        //color: theme.palette.openTitle,\n    }\n}))\n\nfunction Board({ rolls, matrix }) {\n\n    const classes = useStyles()\n\n    console.log(`printing board with ${rolls.length} rolls in ${colsNum} columns`)\n    console.log('rolls length', rolls.length)\n    console.log('columns',colsNum)\n\n    let rows = []\n    let rowRolls = []\n    let rowCounter = 0\n    const matrixDimension = rowsNum*colsNum\n    rolls = rolls.filter((el,x)=>{\n        if (x<matrixDimension){\n            return el\n        }\n    })\n    console.log('reduct rolls',rolls)\n    for (let [index,value] of rolls.entries()) {\n        console.log(rowCounter, index+1, value\n         )\n            rowRolls.push({\n                i:index+1,\n                x:rowCounter+1,\n                y:(index+1+colsNum)-(colsNum*(rowCounter+1)),\n                content: value\n            })\n\n             if(rowRolls.length === colsNum) \n            {   \n                console.log(`pushing rowRolls row_${rowCounter} into the board `,rowRolls)\n                rows.push(<tr key={rowCounter.toString()}><Row key={rowCounter.toString()} id={rowCounter+1} rowRolls={rowRolls}/></tr>)\n                rowRolls = []\n                rowCounter++\n            } \n           \n        }\n        console.log('printing rows',rows)\n        return (\n            \n            <table className={classes.board}>\n                    <tbody> \n                        {rows} \n                    </tbody>\n                </table>\n        )\n        \n}\nexport default Board"]},"metadata":{},"sourceType":"module"}