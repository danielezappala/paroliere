{"ast":null,"code":"var _jsxFileName = \"/Users/daniele/Documents/GitHub/paroliere/src/App.js\";\nimport React, { Component, Fragment, useState } from 'react';\nimport './App.css';\nimport Board from './components/board';\nimport dice from './data';\nimport PrimarySearchAppBar from './components/myAppBar';\nimport { Paper, Button, ThemeProvider, Typography, InputBase } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport theme from './theme';\nimport Ui from './components/ui'; //import <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dice: dice,\n      rowsNum: 5,\n      colsNum: 5,\n      rolls: this.rollsDice(),\n      match: 0,\n      totalTime: 10,\n      countDown: 2\n    };\n    this.handleEvent = this.handleEvent.bind(this);\n    this.handleRowsNum = this.handleRowsNum.bind(this);\n  }\n\n  changeRowsNum(value) {\n    this.setState({\n      rowsNum: value,\n      colsNum: value\n    });\n  }\n\n  handleRowsNum({\n    target: {\n      value\n    }\n  }) {\n    console.log('changing rows number');\n    this.changeRowsNum(value);\n  }\n\n  handleEvent(event, id) {\n    console.log('parent handleEvent');\n    event.stopPropagation();\n\n    switch (event.type) {\n      case 'click':\n        console.log('clicked ', event.target, id);\n        this.setState(() => ({\n          rolls: this.rollsDice(this.state.rowsNum)\n        }));\n        break;\n\n      default:\n        console.log('unhandled ', event.type);\n    }\n  }\n\n  rollsDice() {\n    console.log('rollsDice');\n    let rowsNum = 0;\n\n    if (typeof (this.state === 'undefined')) {\n      rowsNum = 5;\n    } else {\n      rowsNum = this.state.rowsNum;\n    }\n\n    let rolls = []; //clone whole diceStack\n\n    let diceStack = [...dice];\n\n    while (diceStack.length > dice.length - rowsNum * rowsNum) {\n      let dieNumber = Math.floor(Math.random() * diceStack.length);\n      let dieFace = Math.floor(Math.random() * rowsNum);\n      rolls.push(diceStack[dieNumber][dieFace]);\n      diceStack.splice(dieNumber, 1);\n    }\n\n    console.log('last rolls', rolls);\n    this.setState(() => ({\n      'match': this.state.match + 1\n    }));\n    return rolls;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, this.renderRowsNum, /*#__PURE__*/React.createElement(Ui, {\n      parentState: this.state,\n      handleEvent: this.handleEvent,\n      onChangeRowsNum: this.handleRowsNum,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/daniele/Documents/GitHub/paroliere/src/App.js"],"names":["React","Component","Fragment","useState","Board","dice","PrimarySearchAppBar","Paper","Button","ThemeProvider","Typography","InputBase","withStyles","theme","Ui","App","constructor","props","state","rowsNum","colsNum","rolls","rollsDice","match","totalTime","countDown","handleEvent","bind","handleRowsNum","changeRowsNum","value","setState","target","console","log","event","id","stopPropagation","type","diceStack","length","dieNumber","Math","floor","random","dieFace","push","splice","render","renderRowsNum"],"mappings":"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","sourcesContent":["import React, { Component, Fragment, useState } from 'react';\nimport './App.css';\nimport Board from './components/board'\nimport dice from './data'\nimport PrimarySearchAppBar from './components/myAppBar'\nimport { Paper, Button, ThemeProvider, Typography, InputBase } from '@material-ui/core'\nimport { withStyles } from '@material-ui/core/styles';\nimport theme from './theme';\nimport Ui from './components/ui'\n\n//import <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      dice: dice,\n      rowsNum: 5,\n      colsNum: 5,\n      rolls: this.rollsDice(),\n      match: 0,\n      totalTime: 10,\n      countDown: 2\n    }\n    this.handleEvent = this.handleEvent.bind(this);\n    this.handleRowsNum= this.handleRowsNum.bind(this)\n\n  }\n\n  changeRowsNum(value){\n    this.setState({ \n      rowsNum: value,\n      colsNum: value\n    }) \n  }\n\n  handleRowsNum({ target: { value } }){\n    console.log('changing rows number')\n    this.changeRowsNum(value);\n  }\n\n\n    handleEvent(event, id) { \n      console.log('parent handleEvent')\n      event.stopPropagation();\n      switch (event.type) {\n        case 'click':\n          console.log('clicked ', event.target, id);\n          this.setState(() => (\n            { rolls: this.rollsDice(this.state.rowsNum)}))\n          break\n        default:\n          console.log('unhandled ', event.type)\n      }\n    }\n    \n\n    rollsDice() {\n      console.log('rollsDice')\n      let rowsNum = 0\n      if (typeof(this.state === 'undefined')){\n        rowsNum = 5\n      }\n      else{\n        rowsNum = this.state.rowsNum\n      }\n      let rolls = []\n      //clone whole diceStack\n      let diceStack = [...dice]\n      while (diceStack.length > (dice.length-(rowsNum*rowsNum))){\n        let dieNumber = Math.floor(Math.random() * diceStack.length); \n        let dieFace = Math.floor(Math.random() * rowsNum); \n        rolls.push(diceStack[dieNumber][dieFace])\n        diceStack.splice(dieNumber,1)\n      }\n      \n      console.log('last rolls', rolls)\n      this.setState(() => (\n        { \n          'match': this.state.match+1 }))\n      return rolls\n    }\n\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        {this.renderRowsNum}\n        <Ui parentState={this.state} \n          handleEvent={this.handleEvent} \n          onChangeRowsNum={this.handleRowsNum}/>\n      </ThemeProvider>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}