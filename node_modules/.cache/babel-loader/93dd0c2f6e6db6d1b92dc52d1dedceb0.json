{"ast":null,"code":"var _jsxFileName = \"/Users/daniele/Documents/GitHub/paroliere/src/components/board.js\";\nimport React, { Fragment } from 'react';\nimport { GridList } from '@material-ui/core';\nimport Headers from './headers';\nimport Die from './die';\nimport Row from './row';\nconsole.log('Board');\n\nfunction Board({\n  rows,\n  cols\n}) {\n  console.log(`printing board with ${rows} rows and ${cols} columns`);\n  let content = [];\n\n  for (let r = 1; r <= rows; r++) {\n    content.push( /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      row: r,\n      cols: cols,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 26\n      }\n    })));\n  }\n  /*\n  return <table>\n      <Headers cols={cols}></Headers>\n          {content}\n      </table>\n       <GridList cellHeight={20} cols={9}>\n  {tileData.map((tile) => {\n    console.log(tile)\n    return (  \n      <GridListTile key={tile} cols={3} spacing={1}>\n          <Die row={2}col={3} tile={tile}/>\n      </GridListTile>\n      )}\n  )}\n  </GridList>\n  */\n\n\n  const tileData = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 1\n    }\n  });\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/daniele/Documents/GitHub/paroliere/src/components/board.js"],"names":["React","Fragment","GridList","Headers","Die","Row","console","log","Board","rows","cols","content","r","push","tileData"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,QAAR,QAAuB,mBAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACAC,OAAO,CAACC,GAAR,CAAY,OAAZ;;AAEA,SAASC,KAAT,CAAe;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAf,EAA4B;AAC5BJ,EAAAA,OAAO,CAACC,GAAR,CAAa,uBAAsBE,IAAK,aAAYC,IAAK,UAAzD;AACA,MAAIC,OAAO,GAAG,EAAd;;AACI,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIH,IAArB,EAA2BG,CAAC,EAA5B,EAA+B;AAE3BD,IAAAA,OAAO,CAACE,IAAR,eAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAED,CAAV;AAAa,MAAA,IAAI,EAAEF,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,CAAb;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEG,QAAMI,QAAQ,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,CAAjB;AAEH,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA;AAIO;;AAGP,eAAeN,KAAf","sourcesContent":["import React, {Fragment} from 'react';\nimport {GridList} from '@material-ui/core'\nimport Headers from './headers'\nimport Die from './die' \nimport Row from './row'\nconsole.log('Board')\n\nfunction Board({rows, cols}){\nconsole.log(`printing board with ${rows} rows and ${cols} columns`)\nlet content = []\n    for (let r = 1; r <= rows; r++){\n\n        content.push(<tr><Row row={r} cols={cols}/></tr>)\n    }\n    /*\n    return <table>\n        <Headers cols={cols}></Headers>\n            {content}\n        </table>\n\n        <GridList cellHeight={20} cols={9}>\n  {tileData.map((tile) => {\n      console.log(tile)\n      return (  \n        <GridListTile key={tile} cols={3} spacing={1}>\n            <Die row={2}col={3} tile={tile}/>\n        </GridListTile>\n        )}\n    )}\n</GridList>\n    */\n   const tileData = [1,2,3,4,5,6,7,8,9]\n\nreturn (\n<div></div>\n\n)\n      }\n\n\nexport default Board"]},"metadata":{},"sourceType":"module"}