{"ast":null,"code":"var _jsxFileName = \"/Users/daniele/Documents/GitHub/paroliere/src/components/board.js\";\nimport React, { Fragment } from 'react';\nimport Headers from './headers';\nimport Row from './row';\nconsole.log('Board');\n\nfunction Board({\n  rolls,\n  colsNum\n}) {\n  console.log(`printing board with ${rolls.length} rolls in ${colsNum} columns`);\n  console.log('rolls ', rolls);\n  let content = [];\n  let rowRolls = [];\n  let rowIndex = 0;\n\n  for (let roll in rolls) {\n    rowRolls.push(rolls[roll]);\n    console.log('rowRolls ', rowRolls);\n    console.log('rowRolls length', rowRolls.length);\n\n    if (rowRolls.length === colsNum) {\n      rowIndex = rowIndex + 1;\n      console.log(`pushing roll in row ${rowIndex}`);\n      content.push( /*#__PURE__*/React.createElement(\"tr\", {\n        key: rowIndex.toString(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 30\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        key: rowIndex.toString(),\n        rowRolls: rowRolls,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 60\n        }\n      })));\n      rowRolls = [];\n    }\n  }\n\n  return {\n    content\n  };\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/daniele/Documents/GitHub/paroliere/src/components/board.js"],"names":["React","Fragment","Headers","Row","console","log","Board","rolls","colsNum","length","content","rowRolls","rowIndex","roll","push","toString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACAC,OAAO,CAACC,GAAR,CAAY,OAAZ;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAf,EAAmC;AAE/BJ,EAAAA,OAAO,CAACC,GAAR,CAAa,uBAAsBE,KAAK,CAACE,MAAO,aAAYD,OAAQ,UAApE;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBE,KAAtB;AACA,MAAIG,OAAO,GAAG,EAAd;AACA,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,QAAQ,GAAG,CAAf;;AACA,OAAK,IAAIC,IAAT,IAAiBN,KAAjB,EAAwB;AAChBI,IAAAA,QAAQ,CAACG,IAAT,CAAcP,KAAK,CAACM,IAAD,CAAnB;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBM,QAAzB;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BM,QAAQ,CAACF,MAAxC;;AACA,QAAGE,QAAQ,CAACF,MAAT,KAAoBD,OAAvB,EACA;AACII,MAAAA,QAAQ,GAAGA,QAAQ,GAAC,CAApB;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAa,uBAAsBO,QAAS,EAA5C;AACAF,MAAAA,OAAO,CAACI,IAAR,eAAa;AAAI,QAAA,GAAG,EAAEF,QAAQ,CAACG,QAAT,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA8B,oBAAC,GAAD;AAAK,QAAA,GAAG,EAAEH,QAAQ,CAACG,QAAT,EAAV;AAA+B,QAAA,QAAQ,EAAEJ,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9B,CAAb;AACAA,MAAAA,QAAQ,GAAG,EAAX;AACH;AACJ;;AACJ,SACG;AAACD,IAAAA;AAAD,GADH;AAGJ;;AAGD,eAAeJ,KAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport Headers from './headers'\nimport Row from './row'\nconsole.log('Board')\n\nfunction Board({ rolls, colsNum }) {\n\n    console.log(`printing board with ${rolls.length} rolls in ${colsNum} columns`)\n    console.log('rolls ', rolls)\n    let content = []\n    let rowRolls = []\n    let rowIndex = 0\n    for (let roll in rolls) {\n            rowRolls.push(rolls[roll])\n            console.log('rowRolls ', rowRolls)\n            console.log('rowRolls length', rowRolls.length)\n            if(rowRolls.length === colsNum) \n            {\n                rowIndex = rowIndex+1\n                console.log(`pushing roll in row ${rowIndex}`)\n                content.push(<tr key={rowIndex.toString()}><Row key={rowIndex.toString()} rowRolls={rowRolls}/></tr>)\n                rowRolls = []\n            } \n        }\n     return (\n        {content}\n    )\n}\n\n\nexport default Board"]},"metadata":{},"sourceType":"module"}