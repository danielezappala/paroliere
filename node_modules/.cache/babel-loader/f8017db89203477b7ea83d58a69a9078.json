{"ast":null,"code":"var _jsxFileName = \"/Users/daniele/Documents/GitHub/paroliere/src/components/board.js\";\nimport React, { Fragment } from 'react';\nimport Headers from './headers';\nimport Row from './row';\nimport { Typography, Card } from '@material-ui/core';\nimport theme from './theme';\nimport 'fontsource-roboto';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  board: {\n    margin: '30px',\n    border: '5px' //color: theme.palette.openTitle,\n\n  }\n}));\n\nfunction Board({\n  rolls,\n  colsNum\n}) {\n  console.log(`printing board with ${rolls.length} rolls in ${colsNum} columns`);\n  console.log('rolls length', rolls.length);\n  console.log('columns', colsNum);\n  let rows = [];\n  let rowRolls = [];\n  let rowCounter = 0;\n\n  for (let [index, value] of rolls.entries()) {\n    console.log(rowCounter, index + 1, value);\n    rowRolls.push({\n      i: index + 1,\n      x: rowCounter + 1,\n      y: index + 1 + colsNum - colsNum * (rowCounter + 1),\n      content: value\n    });\n\n    if (rowRolls.length === colsNum) {\n      console.log(`pushing rowRolls row_${rowCounter} into the board `, rowRolls);\n      rows.push( /*#__PURE__*/React.createElement(\"tr\", {\n        key: rowCounter.toString(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        key: rowCounter.toString(),\n        id: rowCounter + 1,\n        rowRolls: rowRolls,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 59\n        }\n      })));\n      rowRolls = [];\n      rowCounter++;\n    }\n  }\n\n  console.log('printing rows', rows);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.board,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }\n  }, rows);\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/daniele/Documents/GitHub/paroliere/src/components/board.js"],"names":["React","Fragment","Headers","Row","Typography","Card","theme","makeStyles","useStyles","board","margin","border","Board","rolls","colsNum","console","log","length","rows","rowRolls","rowCounter","index","value","entries","push","i","x","y","content","toString","classes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAAQC,UAAR,EAAoBC,IAApB,QAA+B,mBAA/B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,mBAAP;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAGA,MAAMC,SAAS,GAAGD,UAAU,CAACD,KAAK,KAAI;AAClCG,EAAAA,KAAK,EAAC;AACFC,IAAAA,MAAM,EAAE,MADN;AAEFC,IAAAA,MAAM,EAAE,KAFN,CAGF;;AAHE;AAD4B,CAAJ,CAAN,CAA5B;;AAQA,SAASC,KAAT,CAAe;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAf,EAAmC;AAE/BC,EAAAA,OAAO,CAACC,GAAR,CAAa,uBAAsBH,KAAK,CAACI,MAAO,aAAYH,OAAQ,UAApE;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,KAAK,CAACI,MAAlC;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBF,OAAtB;AAEA,MAAII,IAAI,GAAG,EAAX;AACA,MAAIC,QAAQ,GAAG,EAAf;AACA,MAAIC,UAAU,GAAG,CAAjB;;AACA,OAAK,IAAI,CAACC,KAAD,EAAOC,KAAP,CAAT,IAA0BT,KAAK,CAACU,OAAN,EAA1B,EAA2C;AACvCR,IAAAA,OAAO,CAACC,GAAR,CAAYI,UAAZ,EAAwBC,KAAK,GAAC,CAA9B,EAAiCC,KAAjC;AAEIH,IAAAA,QAAQ,CAACK,IAAT,CAAc;AACVC,MAAAA,CAAC,EAACJ,KAAK,GAAC,CADE;AAEVK,MAAAA,CAAC,EAACN,UAAU,GAAC,CAFH;AAGVO,MAAAA,CAAC,EAAEN,KAAK,GAAC,CAAN,GAAQP,OAAT,GAAmBA,OAAO,IAAEM,UAAU,GAAC,CAAb,CAHlB;AAIVQ,MAAAA,OAAO,EAAEN;AAJC,KAAd;;AAOC,QAAGH,QAAQ,CAACF,MAAT,KAAoBH,OAAvB,EACD;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAa,wBAAuBI,UAAW,kBAA/C,EAAiED,QAAjE;AACAD,MAAAA,IAAI,CAACM,IAAL,eAAU;AAAI,QAAA,GAAG,EAAEJ,UAAU,CAACS,QAAX,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgC,oBAAC,GAAD;AAAK,QAAA,GAAG,EAAET,UAAU,CAACS,QAAX,EAAV;AAAiC,QAAA,EAAE,EAAET,UAAU,GAAC,CAAhD;AAAmD,QAAA,QAAQ,EAAED,QAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhC,CAAV;AACAA,MAAAA,QAAQ,GAAG,EAAX;AACAC,MAAAA,UAAU;AACb;AAEJ;;AACDL,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BE,IAA5B;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAEY,OAAO,CAACrB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCS,IAAhC,CAAP;AACP;;AACD,eAAeN,KAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport Headers from './headers'\nimport Row from './row'\nimport {Typography, Card} from '@material-ui/core';\nimport theme from './theme';\nimport 'fontsource-roboto';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles(theme =>({\n    board:{\n        margin: '30px',\n        border: '5px',\n        //color: theme.palette.openTitle,\n    }\n}))\n\nfunction Board({ rolls, colsNum }) {\n\n    console.log(`printing board with ${rolls.length} rolls in ${colsNum} columns`)\n    console.log('rolls length', rolls.length)\n    console.log('columns',colsNum)\n\n    let rows = []\n    let rowRolls = []\n    let rowCounter = 0\n    for (let [index,value] of rolls.entries()) {\n        console.log(rowCounter, index+1, value\n         )\n            rowRolls.push({\n                i:index+1,\n                x:rowCounter+1,\n                y:(index+1+colsNum)-(colsNum*(rowCounter+1)),\n                content: value\n            })\n\n             if(rowRolls.length === colsNum) \n            {   \n                console.log(`pushing rowRolls row_${rowCounter} into the board `,rowRolls)\n                rows.push(<tr key={rowCounter.toString()}><Row key={rowCounter.toString()} id={rowCounter+1} rowRolls={rowRolls}/></tr>)\n                rowRolls = []\n                rowCounter++\n            } \n           \n        }\n        console.log('printing rows',rows)\n\n        return <div className={classes.board}>{rows}</div>\n}\nexport default Board"]},"metadata":{},"sourceType":"module"}