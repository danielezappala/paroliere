{"ast":null,"code":"var _jsxFileName = \"/Users/daniele/Documents/GitHub/paroliere/src/components/row.js\";\nimport React, { Fragment } from 'react';\nimport Die from './die';\n\nfunction Row({\n  id,\n  rowRolls\n}) {\n  console.log('Row'); //console.log(`printing rowRolls ${id}`,rowRolls)\n\n  let diceInRow = [];\n\n  for (let roll of rowRolls) {\n    //console.log(`sending die index ${roll.i} letter ${roll.content}` )\n    diceInRow.push( /*#__PURE__*/React.createElement(\"td\", {\n      key: roll.i.toString(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(Die, {\n      key: roll.i.toString(),\n      roll: roll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 52\n      }\n    })));\n  }\n\n  return diceInRow;\n}\n\nexport default Row;","map":{"version":3,"sources":["/Users/daniele/Documents/GitHub/paroliere/src/components/row.js"],"names":["React","Fragment","Die","Row","id","rowRolls","console","log","diceInRow","roll","push","i","toString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAGA,SAASC,GAAT,CAAa;AAACC,EAAAA,EAAD;AAAIC,EAAAA;AAAJ,CAAb,EAA4B;AAExBC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAFwB,CAGxB;;AAEA,MAAIC,SAAS,GAAG,EAAhB;;AAEA,OAAK,IAAIC,IAAT,IAAiBJ,QAAjB,EAA2B;AACvB;AACAG,IAAAA,SAAS,CAACE,IAAV,eAAe;AAAI,MAAA,GAAG,EAAED,IAAI,CAACE,CAAL,CAAOC,QAAP,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA4B,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAEH,IAAI,CAACE,CAAL,CAAOC,QAAP,EAAV;AAA6B,MAAA,IAAI,EAAEH,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5B,CAAf;AACH;;AAED,SAAOD,SAAP;AACH;;AAED,eAAeL,GAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport Die from './die'\n\n\nfunction Row({id,rowRolls}) {\n    \n    console.log('Row')\n    //console.log(`printing rowRolls ${id}`,rowRolls)\n\n    let diceInRow = []\n\n    for (let roll of rowRolls) {\n        //console.log(`sending die index ${roll.i} letter ${roll.content}` )\n        diceInRow.push(<td key={roll.i.toString()}><Die key={roll.i.toString()} roll={roll}/></td>)\n    }\n    \n    return diceInRow\n}\n\nexport default Row"]},"metadata":{},"sourceType":"module"}